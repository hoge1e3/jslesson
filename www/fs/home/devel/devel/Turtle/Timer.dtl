// Dolittle
alltimer=!create.
alltimer:list=Array!create.
alltimer:stop=[
    self:list![|i|i!stop.]each.
    self.
].

Timer=!create.
Timer:i=100.
Timer:t=100.
Timer:interval=[|i|
    [i>=0.001]![i=0.001]or.
    self:i=i*1000.
    self
].
Timer:times=[|t|self:t=t.self].
Timer:duration=[|t|self:t=t*1000/self:i.self].
Timer:d=:system!(:window:$:Deferred)new resolve.
Timer:skip=[].
Timer:abort=[].
Timer ! "abort" "stop" addAlias.
Timer:execute=[|f;s t i c|
    s=self.
    t=s:t.
    i=s:i.
    c=1.
    :alltimer:list!(s)add.
    s:d=s:d![|;d|
        s:abort=[:window!(s:id)clearInterval].
        s:skip=[:window!(s:id)clearInterval.d!resolve].
        d=:system!(:window:$:Deferred)new.
        s:id=(:window)![
            [f!(c)execute.]!try[|e|
                s!abort.
                window ! "" "" "" "" (e) onerror.
                //:system!(e)throw.
            ]catch.
            c=c+1.
            [c>t]!then[
                s!skip.
            ]execute.
        ] (i) setInterval.
        d.
    ]then.
    self.
].
Timer:next_execute=Timer:execute.
Timer:after_execute=[|f|
    self:d![f!execute]then.
    self.
].
Timer:wait=[
    DtlPromise ! (self) [|succ|
        ! [
            succ! execute
        ] after_execute 
    ] wait.
].
Timer ! "after_execute" "execute_once" addAlias. 
! "Timer" "timer" addAlias.