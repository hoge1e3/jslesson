/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./js/minimal.js":
/*!***********************!*\
  !*** ./js/minimal.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"run\": () => (/* binding */ run),\n/* harmony export */   \"transpile\": () => (/* binding */ transpile)\n/* harmony export */ });\n/* harmony import */ var _transpiler_DNCL2Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transpiler/DNCL2Parser.js */ \"./js/transpiler/DNCL2Parser.js\");\n/* harmony import */ var _transpiler_DNCL2Semantics_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transpiler/DNCL2Semantics.js */ \"./js/transpiler/DNCL2Semantics.js\");\n/* harmony import */ var _transpiler_DNCL2Builder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transpiler/DNCL2Builder.js */ \"./js/transpiler/DNCL2Builder.js\");\n/* harmony import */ var _runtime_js_lib_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../runtime/js/lib.js */ \"./runtime/js/lib.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nfunction transpile(src) {\r\n\tsrc=src.replace(/[　｜└]/g,'  ').split('\\n').filter(e=>!/^ *$/.test(e)).join('\\n');\r\n\t// console.log(src);\r\n\tconst isSync=str=>/isSync/.test((str.match(/.*\\n/)||[''])[0]);\r\n\tconst tree=_transpiler_DNCL2Parser_js__WEBPACK_IMPORTED_MODULE_0__.DNCL2Parser.parse(src).result[0];\r\n\t// return tree;\r\n\tconst ast=_transpiler_DNCL2Semantics_js__WEBPACK_IMPORTED_MODULE_1__.DNCL2Semantics.analyze(tree);\r\n\t// return ast;\r\n\tconst program=(isSync(src)?_transpiler_DNCL2Builder_js__WEBPACK_IMPORTED_MODULE_2__.DNCL2Builder.buildSync:_transpiler_DNCL2Builder_js__WEBPACK_IMPORTED_MODULE_2__.DNCL2Builder.build)(ast);\r\n\tconsole.log(program);\r\n\treturn program;\r\n}\r\nfunction run(program) {\r\n\t_runtime_js_lib_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].root=_runtime_js_lib_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\r\n\twindow.root=_runtime_js_lib_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\r\n\tconst AsyncFunction=Object.getPrototypeOf(async function(){}).constructor;\r\n\t(async ()=>{\r\n\t\ttry{\r\n\t\t\tconsole.log(program);\r\n\t\t\tnew Function(`console.log(this.root)`).apply({root: _runtime_js_lib_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]});\r\n\t\t\tawait (new AsyncFunction(`try{await ${program}.apply(window.root)}catch(e){alert(e);console.log(e);}`).apply({root: _runtime_js_lib_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]}));\r\n\t\t}catch(e){alert(e);}\r\n\t})();\r\n}\r\nwindow.DNCL2={transpile, run};\n\n//# sourceURL=webpack://dncl2/./js/minimal.js?");

/***/ }),

/***/ "./js/transpiler/DNCL2Builder.js":
/*!***************************************!*\
  !*** ./js/transpiler/DNCL2Builder.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DNCL2Builder\": () => (/* binding */ DNCL2Builder)\n/* harmony export */ });\n/* harmony import */ var _Processor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Processor.js */ \"./js/transpiler/Processor.js\");\n\r\n\r\nconst DNCL2Builder = (()=>{\r\n\r\n\tlet sync=false;\r\n\tconst build=tree=>{\r\n\t\tconst builder=(0,_Processor_js__WEBPACK_IMPORTED_MODULE_0__.Bottomup)();\r\n\r\n\t\tconst tokens={\r\n\t\t\t'identifier':value=>`${value.text}`,\r\n\t\t\t'string':value=>`${value.text}`,\r\n\t\t\t'number':value=>`${value.text}`,\r\n\t\t};\r\n\t\tbuilder.load(tokens);\r\n\t\tconst ops={\r\n\t\t\t'op':node=>{\r\n\t\t\t\tconst op=node;\r\n\t\t\t\treturn `${op.text}`;\r\n\t\t\t},\r\n\t\t};\r\n\t\tbuilder.load(ops);\r\n\t\tlet forinfo=1, whileinfo=1, ifinfo=1;\r\n\t\tconst gdef={\r\n\t\t\t'外部からの入力':()=> `this['外部からの入力']([])`,\r\n\t\t\t'array':node=>{\r\n\t\t\t\treturn `[${node.join(',')}]`;\r\n\t\t\t},\r\n\t\t\t'array_ref':([variable,refer])=>{\r\n\t\t\t\treturn `this['ary_ref'](this,'${variable}','${refer.join(',')}')`;\r\n\t\t\t},\r\n\t\t\t'simple':node=>{\r\n\t\t\t\tconst [simple]=node;\r\n\t\t\t\treturn `${simple}`;\r\n\t\t\t},\r\n\t\t\t'prefix':node=>{\r\n\t\t\t\tconst [op,right]=node;\r\n\t\t\t\treturn `${op}${right}`;\r\n\t\t\t},\r\n\t\t\t'infixl':node=>{\r\n\t\t\t\tconst [left,op,right]=node;\r\n\t\t\t\treturn `${left}${op}${right}`;\r\n\t\t\t\t// return `${left}.${op}(${right})`;\r\n\t\t\t},\r\n\t\t\t'infix_expr':node=>`${node}`,\r\n\t\t\t'variable':node=>{\r\n\t\t\t\tconst variable=node;\r\n\t\t\t\tconst {pos}=variable;\r\n\t\t\t\tconst [text]=variable;\r\n\t\t\t\t// return {toString:()=>`this[\"${text}\"]`, pos};\r\n\t\t\t\treturn {toString:()=>`this[\"${text}\"]`, pos};\r\n\t\t\t},\r\n\t\t\t'factor':node=>({toString:()=>`${node}`,pos:node.pos}),\r\n\t\t\t'term':node=>({toString:()=>`${node}`,pos:node.pos}),\r\n\t\t\t'expression':node=>({toString:()=>`${node}`,pos:node.pos}),\r\n\t\t\t'unary_term':node=>{\r\n\t\t\t\tconst [op,target]=node;\r\n\t\t\t\treturn `${op}${target}`;\r\n\t\t\t},\r\n\t\t\t'paren':node=>{\r\n\t\t\t\tconst [inner]=node;\r\n\t\t\t\treturn `(${inner})`;\r\n\t\t\t},\r\n\t\t\t'func_call':([f,params])=>{\r\n\t\t\t\treturn `(await this['callf'](\"${f}\",[${params.join(',')}]))`;\r\n\t\t\t},\r\n\t\t\t'then':([cond,stmts])=>{\r\n\t\t\t\treturn `if(this['iff'](${ifinfo++},${cond})){${stmts}}`;\r\n\t\t\t},\r\n\t\t\t'if':([then,elsif,_else])=>{\r\n\t\t\t\tconsole.log(_else);\r\n\t\t\t\treturn `${then}${elsif?'\\n'+elsif:''}${_else?'\\n'+_else:''}`;\r\n\t\t\t},\r\n\t\t\t'else':([_else])=>{\r\n\t\t\t\treturn `else{${_else}}`;\r\n\t\t\t},\r\n\t\t\t'elsif':([cond,stmts])=>{\r\n\t\t\t\treturn `else if(${cond}){${stmts}}`\r\n\t\t\t},\r\n\t\t\t'elsif_list':(elsif_list)=>{\r\n\t\t\t\treturn elsif_list.join('\\n');\r\n\t\t\t},\r\n\t\t\t'for_parts':([i,from,to,step,op])=>{\r\n\t\t\t\treturn [\r\n\t\t\t\t\t`this['forinfo'][${forinfo}]||=0,${i}=${from}`,\r\n\t\t\t\t\t`${i}${op=='+'?'<=':'>='}${to}`,\r\n\t\t\t\t\t`this['forinfo'][${forinfo++}]++,${i}${op=='+'?'+=':'-='}${step}`,\r\n\t\t\t\t].join(';\\n');\r\n\t\t\t},\r\n\t\t\t'for':([parts, stmts])=>{\r\n\t\t\t\treturn [\r\n\t\t\t\t\t`for(`,\r\n\t\t\t\t\t`${parts}`,\r\n\t\t\t\t\t`){`,\r\n\t\t\t\t\t\t`${stmts}`,\r\n\t\t\t\t\t`}`,\r\n\t\t\t\t].join('\\n');\r\n\t\t\t},\r\n\t\t\t'for_in_parts':([ary, key])=>{\r\n\t\t\t\treturn [`${key} of ${ary}`];\r\n\t\t\t},\r\n\t\t\t'for_in':([parts,stmts])=>{\r\n\t\t\t\tconst id=forinfo++;\r\n\t\t\t\treturn [\r\n\t\t\t\t\t`this['forinfo'][${id}]=this['forinfo'][${id}]||0;`,\r\n\t\t\t\t\t`for(${parts}){`,\r\n\t\t\t\t\t\t`this['forinfo'][${id}]++;`,\r\n\t\t\t\t\t\t`${stmts}`,\r\n\t\t\t\t\t`}`,\r\n\t\t\t\t].join('\\n');\r\n\t\t\t},\r\n\t\t\t'loop_parts':([times])=>{\r\n\t\t\t\treturn [`const i in Array(${times}).fill(0)`,forinfo++];\r\n\t\t\t},\r\n\t\t\t'loop':([[times,id], stmts])=>{\r\n\t\t\t\treturn [\r\n\t\t\t\t\t`this['forinfo'][${id}]=this['forinfo'][${id}]||0;`,\r\n\t\t\t\t\t`for(${times}){`,\r\n\t\t\t\t\t\t`this['forinfo'][${id}]++;`,\r\n\t\t\t\t\t\t`${stmts}`,\r\n\t\t\t\t\t`}`,\r\n\t\t\t\t].join('\\n');\r\n\t\t\t},\r\n\t\t\t'while_parts':([cond])=>{\r\n\t\t\t\treturn `${cond}`;\r\n\t\t\t},\r\n\t\t\t'while':([cond,stmts])=>{\r\n\t\t\t\tconst id=whileinfo++;\r\n\t\t\t\treturn [\r\n\t\t\t\t\t`this['whileinfo'][${id}]||=0;`,\r\n\t\t\t\t\t`while(${cond}){`,\r\n\t\t\t\t\t\t`this['whileinfo'][${id}]++;`,\r\n\t\t\t\t\t\t`if(this['_killFlag'])throw new Error('プログラムを終了しました。');`,\r\n\t\t\t\t\t\t`${stmts}`,\r\n\t\t\t\t\t`}`,\r\n\t\t\t\t].join('\\n');\r\n\t\t\t},\r\n\t\t\t'func_def_param':node=>{\r\n\t\t\t\treturn `(${node.join(',')})`;\r\n\t\t\t},\r\n\t\t\t'func_def_parts':([func_name, param])=>{\r\n\t\t\t\treturn `${func_name}=async ${param}`\r\n\t\t\t},\r\n\t\t\t'func_def':([defer, stmts])=>{\r\n\t\t\t\treturn `${defer}=>{${stmts}};`;\r\n\t\t\t},\r\n\t\t\t'initial_set':([ary,value])=>{\r\n\t\t\t\treturn `this['initial_set']('${ary}',${value});`;\r\n\t\t\t},\r\n\t\t\t'return':([value])=>{\r\n\t\t\t\treturn `return ${value};`;\r\n\t\t\t},\r\n\t\t\t'assign_left':node=>{\r\n\t\t\t\tconst [assign]=node;\r\n\t\t\t\tif(!assign)return '';\r\n\t\t\t\treturn `${assign}`;\r\n\t\t\t},\r\n\t\t\t'assign':node=>{\r\n\t\t\t\tconst [assign, stmt]=node;\r\n\t\t\t\treturn `${assign?assign+'=':''}${stmt};`;\r\n\t\t\t\t// if(assign){\r\n\t\t\t\t//   return `${assign.replace(/\\.getProp\\(([^\\(]*)\\)$/,(_,left)=>`.setProp(${left},${stmt})`)};`;\r\n\t\t\t\t// }\r\n\t\t\t\t// return `${stmt};`;\r\n\t\t\t},\r\n\t\t\t'statement_list':stmts=>{\r\n\t\t\t\treturn `${stmts.join('\\n')}`;\r\n\t\t\t},\r\n\t\t\t'program':node=>{\r\n\t\t\t\tconst [program]=node;\r\n\t\t\t\treturn [`(${sync?'':'async '}function(){`,\r\n\t\t\t\t\t`${program}`,\r\n\t\t\t\t\t`})`\r\n\t\t\t\t].join('\\n');\r\n\t\t\t},\r\n\t\t};\r\n\t\tbuilder.load(gdef);\r\n\r\n\t\t// console.log('tree is ', tree);\r\n\t\tconst builded=builder.process(tree);\r\n\t\treturn builded;\r\n\t};\r\n\treturn class{\r\n\t\tstatic build(tree){\r\n\t\t\tsync=false;\r\n\t\t\tconst builded=build(tree);\r\n\t\t\t// const builded=tree;\r\n\t\t\t// console.log('builded:',builded);\r\n\t\t\treturn builded;\r\n\t\t}\r\n\t\tstatic buildSync(tree){\r\n\t\t\tsync=true;\r\n\t\t\tconst builded=build(tree);\r\n\t\t\t// const builded=tree;\r\n\t\t\t// console.log('builded:',builded);\r\n\t\t\treturn builded;\r\n\t\t}\r\n\t};\r\n})();\r\n\n\n//# sourceURL=webpack://dncl2/./js/transpiler/DNCL2Builder.js?");

/***/ }),

/***/ "./js/transpiler/DNCL2Parser.js":
/*!**************************************!*\
  !*** ./js/transpiler/DNCL2Parser.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DNCL2Parser\": () => (/* binding */ DNCL2Parser)\n/* harmony export */ });\n/* harmony import */ var _Grammer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Grammer.js */ \"./js/transpiler/Grammer.js\");\n/* harmony import */ var _parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser.js */ \"./js/transpiler/parser.js\");\n\r\n\r\n\r\nconst DNCL2Parser= (function (){\r\n\tvar parser={};\r\n\tlet maxTokenPos=0;\r\n\tlet maxPos=0;\r\n\tconst sp=_parser_js__WEBPACK_IMPORTED_MODULE_1__.Parser.StringParser; // 文字列を解析するパーサ\r\n\t// const space=sp.reg(/^(\\s*(\\/\\*([^\\/]|[^*]\\/)*\\*\\/)**)*/).ret(e=>console.log('eeeee'));\r\n\tconst space=sp.reg(/^([ \\f\\t\\v\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*(\\/\\*([^\\/]|[^*]\\/|\\r|\\n)*\\*\\/)*(\\#[^\\r\\n]*\\r?\\n)*)*/);\r\n\tfunction token(r) {\r\n\t\tconst str=(typeof r=='string')?sp.str(r):sp.reg(r);\r\n\t\treturn str.and(space).ret(function(b, a) {\r\n\t\t\tmaxTokenPos=Math.max(maxTokenPos,b.pos);\r\n\t\t\tmaxPos=Math.max(maxPos,b.pos+b.len);\r\n\t\t\t// console.log('look to ', b.src.str.substring())\r\n\t\t\treturn {pos:b.pos,\r\n\t\t\t\t\ttext: b.src.str.substring( b.pos, b.pos+b.len ) ,\r\n\t\t\t\t\ttoString: function (){\r\n\t\t\t\t\t\t//return this.text+\"(\"+this.pos+\")\";\r\n\t\t\t\t\t\treturn this.text;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tfunction token_noSpace(r) {\r\n\t\tconst str=(typeof r=='string')?sp.str(r):sp.reg(r);\r\n\t\treturn str.ret(function(b) {\r\n\t\t\tmaxTokenPos=Math.max(maxTokenPos,b.pos);\r\n\t\t\tmaxPos=Math.max(maxPos,b.pos+b.len);\r\n\t\t\t// console.log('look to ', b.src.str.substring())\r\n\t\t\treturn {pos:b.pos,\r\n\t\t\t\t\ttext: b.src.str.substring( b.pos, b.pos+b.len ) ,\r\n\t\t\t\t\ttoString: function (){\r\n\t\t\t\t\t\t//return this.text+\"(\"+this.pos+\")\";\r\n\t\t\t\t\t\treturn this.text;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tconst nest=[-1];\r\n\tconst indent_first=token(/^ */).except(s=>{\r\n\t\t// console.log('indent > ')\r\n\t\t// console.log('now_indent',nest[nest.length-1])\r\n\t\t// console.log('new_indent',s.text.length)\r\n\t\tif(nest[nest.length-1]>=s.text.length)return true;\r\n\t\tnest.push(s.text.length)\r\n\t\t// console.log(nest);\r\n\t});\r\n\t\r\n\tconst indent=token(/^ */).except(s=>{\r\n\t\t// console.log('indent check...')\r\n\t\t// console.log('now_indent',nest[nest.length-1])\r\n\t\t// console.log('current_indent',s.text.length)\r\n\t\tif(nest[nest.length-1]>s.text.length){\r\n\t\t\t// console.log('index < ')\r\n\t\t\tnest.pop();\r\n\t\t\t// console.log('now_indent',nest[nest.length-1])\r\n\t\t\t// console.log('current_nest',s.text.length)\r\n\t\t\t// console.log(nest);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif(nest[nest.length-1]<s.text.length){\r\n\t\t\t// console.log('invalid indent!!');\r\n\t\t\t// console.log('... ng')\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t// console.log('... ok')\r\n\t});\r\n\t// const indent_first = token(/^/).ret(()=>{\r\n\t//   console.log('test');\r\n\t//   nest.push(-1);\r\n\t//   console.log(nest);\r\n\t// });\r\n\r\n\r\n\tconst g = (0,_Grammer_js__WEBPACK_IMPORTED_MODULE_0__.Grammer)();\r\n\r\n\t// g.load({'indent>':indent_first, indent});\r\n\tg.load({indent_first, indent });\r\n\tconst vars=[];\r\n\r\n\tconst tokens={\r\n\t\t'identifier': token(/^[a-zａ-ｚA-ZＡ-Ｚ_＿\\\\$＄\\\\?？ーぁ-んァ-ヶ々〇〻\\u3400-\\u9FFF\\uF900-\\uFAFF\\uD840-\\uD87F\\uDC00-\\uDFFF][a-zａ-ｚA-ZＡ-Ｚ_＿\\\\$＄\\\\?？0-9０-９ーぁ-んァ-ヶ々〇〻\\u3400-\\u9FFF\\uF900-\\uFAFF\\uD840-\\uD87F\\uDC00-\\uDFFF]*/).except(identifier=>{\r\n\t\t\t// console.log(identifier);\r\n\t\t\tconst reserved=[...Object.keys(parts), 'and', 'or', 'not'];\r\n\t\t\t// console.log(reserved.indexOf(identifier+''));\r\n\t\t\tif(reserved.indexOf(identifier+'')>=0)return true;\r\n\t\t\t// console.log(identifier?.toString());\r\n\t\t\treturn false;\r\n\t\t}),\r\n\t\t// 'var_ref':\r\n\t\t// 'identifier': token(/^[a-zａ-ｚA-ZＡ-Ｚ_＿][a-zａ-ｚA-ZＡ-Ｚ_＿]*/).except(identifier=>{\r\n\t\t//   // console.log(identifier);\r\n\t\t//   const reserved=[...Object.keys(parts), 'and', 'or', 'not'];\r\n\t\t//   console.log(identifier?.toString());\r\n\t\t//   console.log(reserved.indexOf(identifier+''));\r\n\t\t//   if(reserved.indexOf(identifier+'')>=0)return true;\r\n\t\t//   return false;\r\n\t\t// }),\r\n\t\t'string': token(/^[\\\"\\”\\“『][^\\\"\\“\\”\\』]*[\\\"\\”\\“』]/).ret(str=>`'${str.text.slice(1,-1)}'`),\r\n\t\t'number': token(/^(([0０][bBｂＢ][01０１]+)|([0０][xｘXＸ][0-9０-９a-fA-Fａ-ｆＡ-Ｆ]+)|([0-9０-９]+([.．]([0-9０-９])+)?))/),\r\n\t};\r\n\tg.load(tokens);\r\n\tconst ops={\r\n\t\t':':token(/^[:：]/),\r\n\t\t'[':token(/^[\\[［]/),\r\n\t\t']':token(/^[\\]］]/),\r\n\t\t'|':token(/^[|｜]/),\r\n\t\t'.':token(/^[.。．]/),\r\n\t\t',':token(/^[,，、]/),\r\n\t\t'(':token(/^[(（]/),\r\n\t\t')':token(/^[)）]/),\r\n\t\t'!':token(/^[!！]/),\r\n\t\t';':token(/^[;；]/),\r\n\t\t'=':token(/^[=＝]/).noFollow(token(/^[=＝]/)),\r\n\t\t'==':token(/^[=＝][=＝]/),\r\n\t\t'+':token(/^[+＋]/),\r\n\t\t'-':token(/^[-−–－]/),\r\n\t\t'*':token(/^[*×＊∗]/),\r\n\t\t'/':token(/^[/÷／]/),\r\n\t\t'>':token(/^[>＞]/),\r\n\t\t'>=':token(/^(?:[>＞][=＝])|≧/),\r\n\t\t'<':token(/^[<＜]/),\r\n\t\t'<=':token(/^(?:[<＜][=＝])|≦/),\r\n\t\t'!=':token(/^(?:[!！][=＝])|≠/),\r\n\t\t'%':token(/^[%％]/),\r\n\t\t'#':token(/^[#＃]/),\r\n\t\t'and':token(/^and/),\r\n\t\t'or':token(/^or/),\r\n\t\t'not':token(/^not/),\r\n\t\t'\\n':token_noSpace(/^\\r?\\n/),\r\n\t};\r\n\tg.load(ops);\r\n\tconst parts={\r\n\t\t'を':token(/^を/),\r\n\t\t'から':token(/^から/),\r\n\t\t'まで':token(/^まで/),\r\n\t\t'ずつ':token(/^ずつ/),\r\n\t\t'増やしながら':token(/^増やしながら/),\r\n\t\t'減らしながら':token(/^減らしながら/),\r\n\t\t'もし':token(/^もし/),\r\n\t\t'ならば':token(/^ならば/),\r\n\t\t'そうでなければ':token(/^そうでなければ/),\r\n\t\t'そうでなくもし':token(/^そうでなく[ 　]?もし/),\r\n\t\t'配列変数':token(/^配列変数/),\r\n\t\t'初期化する':token(/^初期化する/),\r\n\t\t'回繰り返す':token(/^回繰り返す/),\r\n\t\t'の間':token(/^の間/),\r\n\t\t'に取りながら':token(/^に取りながら/),\r\n\t\t'のすべての値を':token(/^の(?:すべて|全て)の値を/),\r\n\t\t'にする':token(/^にする/),\r\n\t\t'を返す':token(/^を返す/),\r\n\t\t'外部からの入力':token(/^[【「｢] ?外部からの入力 ?[】」｣]/),\r\n\t};\r\n\tg.load(parts);\r\n\tconst gdef={\r\n\t\t'simple':[ g.or('string', 'paren', 'number', 'unary_term') ],\r\n\t\t// 'locals':[';', g.rep0('identifier')],\r\n\t\t// 'func_param':['(',g.rep0('identifier'),')'],\r\n\t\t// 'func':['[', g.opt('block_param'), 'statement_list', g.opt('.'), ']'],\r\n\t\t'then_parts':[ 'もし', 'expression', 'ならば', ':', '\\n' ],\r\n\t\t'then':[ 'then_parts', 'statement_list' ],\r\n\t\t'else_parts':[ '\\n', 'indent', 'そうでなければ', ':', '\\n' ],\r\n\t\t'else':[ 'else_parts', 'statement_list' ],\r\n\t\t'elsif_parts':[ '\\n', 'indent', 'そうでなくもし', 'expression', 'ならば', ':', '\\n' ],\r\n\t\t'elsif':[ 'elsif_parts', 'statement_list' ],\r\n\t\t'elsif_list':[ g.rep0('elsif') ],\r\n\t\t'if':[ 'then', g.opt('elsif_list'), g.opt('else') ],\r\n\t\t'for_parts':[\r\n\t\t\t'identifier as variable', 'を', 'expression', 'から', 'expression', 'まで', 'expression', 'ずつ', g.or('増やしながら', '減らしながら'), ':', '\\n'\r\n\t\t],\r\n\t\t'for':[ 'for_parts', 'statement_list' ],\r\n\t\t'loop_parts':[ 'term', '回繰り返す', ':', '\\n' ],\r\n\t\t'loop':[ 'loop_parts', 'statement_list' ],\r\n\t\t'for_in_parts':[ 'identifier as variable', 'を', 'identifier as variable' , 'に取りながら', ':', '\\n' ],\r\n\t\t'for_in':[ 'for_in_parts', 'statement_list' ],\r\n\t\t'while_parts':[ 'expression', 'の間', ':', '\\n' ],\r\n\t\t'while':[ 'while_parts', 'statement_list' ],\r\n\t\t'func_def_param':['(', g.sep0('identifier', ','), ')'],\r\n\t\t'func_def_parts':['identifier as variable', 'func_def_param', ':', '\\n'],\r\n\t\t'func_def':['func_def_parts', 'statement_list'],\r\n\t\t'initial_set':[ 'identifier', 'のすべての値を', 'term', 'にする' ],\r\n\t\t'infix_expr':[g.expr({\r\n\t\t\t'elem':'term',\r\n\t\t\t'ops':[\r\n\t\t\t\t['prefix', g.or('not')],\r\n\t\t\t\t['infixl', g.or('and','or')],\r\n\t\t\t\t['infixl', g.or('#')],\r\n\t\t\t\t['infixl', g.or('==','!=','<=','>=','<','>')],\r\n\t\t\t\t['infixl', g.or('+','-')],\r\n\t\t\t\t['infixl', g.or('*','/','%')],\r\n\t\t\t]\r\n\t\t})],\r\n\t\t// 'infix_expr2':[g.expr({\r\n\t\t//   'elem':'infix_expr',\r\n\t\t//   'ops':[['infixl as prop#', g.or('#')]],\r\n\t\t// })],\r\n\t\t// 'array':[g.expr({\r\n\t\t//   'elem':'term',\r\n\t\t//   'ops':[ ['infixl', g.or(',')] ]\r\n\t\t// })],\r\n\t\t'array':['[', g.sep0('expression', ','), ']'],\r\n\t\t'array_refer':['[', g.sep0('expression', ','), ']'],\r\n\t\t'array_ref':['identifier', 'array_refer'],\r\n\t\t'factor':[ g.or('simple', 'array_ref', 'identifier as variable') ],\r\n\t\t// 'factor2':[g.expr({\r\n\t\t//   'elem':'term',\r\n\t\t//   'ops':[ ['postfix as prop#', g.and('#', 'simple')] ]\r\n\t\t// })],\r\n\t\t'term':[g.or('func_call', 'factor', '外部からの入力')],\r\n\t\t'unary_term':[g.or('+','-'), 'term'],\r\n\t\t'expression':[g.or('array', 'infix_expr')],\r\n\t\t'paren':['(', 'expression', ')'],\r\n\t\t'func_call_param':['(', g.sep0('expression', ','),')'],\r\n\t\t'func_call':['identifier', 'func_call_param'],\r\n\t\t'return':['term', 'を返す'],\r\n\t\t'assign_left':['factor', '='],\r\n\t\t'assign':[g.opt('assign_left'), 'expression'],\r\n\t\t'statement':[g.or('func_def', 'loop', 'for_in' ,'for', 'if', 'while', 'initial_set', 'return', 'assign' )],\r\n\t\t// 'statement':[g.or('assign','for')],\r\n\t\t// 'statement':['assign'],\r\n\t\t// 'statement_first':['indent>', 'indent', 'statement'],\r\n\t\t'statement_first':['indent_first', 'statement'],\r\n\t\t'statement_after_part1':['indent', 'statement'],\r\n\t\t'statement_after_part2':[g.sep1('statement_after_part1', '\\n')],\r\n\t\t'statement_after':['\\n', 'statement_after_part2'],\r\n\t\t// 'statement_after':['\\n', g.opt('statement_after_part2') ],\r\n\t\t// 'statement_list':['statement_first', g.opt('statement_after')],\r\n\t\t'statement_list':['statement_first', g.opt('statement_after')],\r\n\t\t'program':['statement_list'],\r\n\t\t// 'program':['func_def'],\r\n\t\t// 'program':['statement_list', '.'],\r\n\t};\r\n\t// console.log('gdef');\r\n\tg.load(gdef);\r\n\tg.monitor();\r\n\tconst program = g.build();//.and(space.opt());\r\n\r\n\tparser.parse=function (str) {\r\n\t\tnest.length=0;\r\n\t\tnest.push(-1);\r\n\t\tvar input=str+\"\\n\";\r\n\t\tvar output=\"\";\r\n\t\tmaxTokenPos=0;\r\n\t\tmaxPos=0;\r\n\r\n\t\t//console.log(\"INP\",input,input.length);\r\n\t\tvar tree = program.parseStr(input);\r\n\t\t// console.log(tree);\r\n\t\t// console.log('tree', tree.result);\r\n\t\tif(tree.success){\r\n\t\t\t// console.log(str.length);\r\n\t\t\t// console.log(tree.src.maxPos);\r\n\t\t\t// console.log(str.length);\r\n\t\t\t// console.log(tree);\r\n\t\t\tif(tree.pos!=str.length){\r\n\t\t\t\t// console.log(str.length);\r\n\t\t\t\t// console.log(tree.src.maxPos);\r\n\t\t\t\t// console.log(tree.src.pos);\r\n\t\t\t\t// console.log((tree.src.str).substr(0,tree.src.maxPos));\r\n\t\t\t\t// console.log(tree.src);\r\n\t\t\t\t// const msg=[\r\n\t\t\t\t//   `エラーが発生しました。`,\r\n\t\t\t\t// ].join('\\n');\r\n\t\t\t\tconst msg = [\r\n\t\t\t\t\ttree.src.str.slice(0,tree.src.maxPos),\r\n\t\t\t\t\t'★★★',\r\n\t\t\t\t\ttree.src.str.slice(tree.src.maxPos),\r\n\t\t\t\t].join('');\r\n\t\t\t\t\r\n\t\t\t\tthrow new Error(msg);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tconst line=(str.substr(0,tree.src.maxPos-1)).match(/\\n/g);\r\n\t\t\tconst lastToken=str.substring(maxTokenPos,maxPos);\r\n\t\t\tconst msg=[\r\n\t\t\t\t`エラーが発生しました。`,\r\n\t\t\t\t`${(line?line.length:0)+1}行目付近を確認してください。`,\r\n\t\t\t\tlastToken?`『${lastToken}』の付近に間違いがある可能性があります。`:''\r\n\t\t\t].join('\\n');\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\t\treturn tree;\r\n\t};\r\n\treturn parser;\r\n})();\r\n\n\n//# sourceURL=webpack://dncl2/./js/transpiler/DNCL2Parser.js?");

/***/ }),

/***/ "./js/transpiler/DNCL2Semantics.js":
/*!*****************************************!*\
  !*** ./js/transpiler/DNCL2Semantics.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DNCL2Semantics\": () => (/* binding */ DNCL2Semantics)\n/* harmony export */ });\n/* harmony import */ var _Processor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Processor.js */ \"./js/transpiler/Processor.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context.js */ \"./js/transpiler/context.js\");\n\r\n\r\n\r\nconst DNCL2Semantics = (()=>{\r\n\tconst Str2HalfWidth=strVal=>{\r\n\t\tconst halfVal = strVal.replace(/[！-～]/g,\r\n\t\t\t\ttmpStr=>String.fromCharCode(tmpStr.charCodeAt(0)-0xFEE0)\r\n\t\t);\r\n\t\treturn halfVal.replace(/”/g, \"\\\"\").replace(/’/g, \"'\").replace(/‘/g, \"`\")\r\n\t\t\t.replace(/￥/g, \"\\\\\").replace(/　/g, \" \").replace(/〜/g, \"~\");\r\n\t}\r\n\tconst numTrim=num=>{\r\n\t\tconst regNum=/^((?:[0０][bBｂＢ][01０１]+)|(?:[0０][xｘXＸ][0-9０-９a-fA-Fａ-ｆＡ-Ｆ]+)|(?:[0-9０-９]+(?:[.．](?:[0-9０-９])+)?))(?:[a-zA-Z_$\\?？ーぁ-んァ-ヶ々〇〻\\u3400-\\u9FFF\\uF900-\\uFAFF\\uD840-\\uD87F\\uDC00-\\uDFFF][a-zA-Z_$\\?？ーぁ-んァ-ヶ々〇〻\\u3400-\\u9FFF\\uF900-\\uFAFF\\uD840-\\uD87F\\uDC00-\\uDFFF]*)?/;\r\n\t\treturn +(num.match(regNum)[1]\r\n\t\t\t.replace(/[０-９]/g,s=>String.fromCharCode(s.charCodeAt(0)-0xFEE0)).replace(/．/,\".\")\r\n\t\t\t.replace(/[ｘＸａ-ｆＡ-Ｆ]/g,s=>String.fromCharCode(s.charCodeAt(0)-0xFEE0)));\r\n\t}\r\n\tconst extend=(ary,obj)=>{\r\n\t\tfor(const [key,value] of Object.entries(obj)) ary[key]=value; \r\n\t\treturn ary;\r\n\t}\r\n\r\n\tconst trimProcess=tree=>{\r\n\t\tconst bottomup=(0,_Processor_js__WEBPACK_IMPORTED_MODULE_0__.Bottomup)();\r\n\t\tconst tokens={\r\n\t\t\t'identifier': value=>{\r\n\t\t\t\tconst text=Str2HalfWidth(value[0].text);\r\n\t\t\t\tconst {pos}=value[0];\r\n\t\t\t\treturn extend([text],{name:'identifier',toString:()=>text,text,pos});\r\n\t\t\t},\r\n\t\t\t'string': value=>{\r\n\t\t\t\tconst text=value.toString();\r\n\t\t\t\treturn extend([text],{name:'string',toString:()=>text,text});\r\n\t\t\t},\r\n\t\t\t'number': value=>{\r\n\t\t\t\tconst text=numTrim(value[0].text);\r\n\t\t\t\treturn extend([text],{name:'number',toString:()=>text,text});\r\n\t\t\t},\r\n\t\t\t'indent': value=>{\r\n\t\t\t\tconst text=value.toString();\r\n\t\t\t\treturn extend([text],{name:'indent',toString:()=>text,text});\r\n\t\t\t},\r\n\t\t};\r\n\t\tbottomup.load(tokens);\r\n\t\tconst ops={\r\n\t\t\t':': value=>extend([':'],{name:'op',toString:()=>':',text:':'}),\r\n\t\t\t'[': value=>extend(['['],{name:'op',toString:()=>'[',text:'['}),\r\n\t\t\t']': value=>extend([']'],{name:'op',toString:()=>']',text:']'}),\r\n\t\t\t'|': value=>extend(['|'],{name:'op',toString:()=>'|',text:'|'}),\r\n\t\t\t'.': value=>extend(['.'],{name:'op',toString:()=>'',text:'.'}),\r\n\t\t\t',': value=>extend([','],{name:'op',toString:()=>'',text:','}),\r\n\t\t\t'(': value=>extend(['('],{name:'op',toString:()=>'(',text:'('}),\r\n\t\t\t')': value=>extend([')'],{name:'op',toString:()=>')',text:')'}),\r\n\t\t\t'!': value=>extend(['!'],{name:'op',toString:()=>'!',text:'!'}),\r\n\t\t\t';': value=>extend([';'],{name:'op',toString:()=>'',text:';'}),\r\n\t\t\t'=': value=>extend(['='],{name:'op',toString:()=>'=',text:'='}),\r\n\t\t\t'==': value=>extend(['==='],{name:'op',toString:()=>'===',text:'==='}),\r\n\t\t\t'+': value=>extend(['+'],{name:'op',toString:()=>'+',text:'+'}),\r\n\t\t\t'-': value=>extend(['-'],{name:'op',toString:()=>'-',text:'-'}),\r\n\t\t\t'*': value=>extend(['*'],{name:'op',toString:()=>'*',text:'*'}),\r\n\t\t\t'/': value=>extend(['/'],{name:'op',toString:()=>'/',text:'/'}),\r\n\t\t\t'>': value=>extend(['>'],{name:'op',toString:()=>'>',text:'>'}),\r\n\t\t\t'>=': value=>extend(['>='],{name:'op',toString:()=>'>=',text:'>='}),\r\n\t\t\t'<': value=>extend(['<'],{name:'op',toString:()=>'<',text:'<'}),\r\n\t\t\t'<=': value=>extend(['<='],{name:'op',toString:()=>'<=',text:'<='}),\r\n\t\t\t'!=': value=>extend(['!=='],{name:'op',toString:()=>'!==',text:'!='}),\r\n\t\t\t'%': value=>extend(['%'],{name:'op',toString:()=>'%',text:'%'}),\r\n\t\t\t'#': value=>extend(['#'],{name:'op',toString:()=>'#',text:'getProp'}),\r\n\t\t\t'and': value=>extend(['&&'],{name:'op',toString:()=>'&&',text:'&&'}),\r\n\t\t\t'or': value=>extend(['||'],{name:'op',toString:()=>'||',text:'||'}),\r\n\t\t\t'not': value=>extend(['!'],{name:'op',toString:()=>'!',text:'!'}),\r\n\t\t\t'\\n': value=>extend(['\\n'],{name:'op',toString:()=>'\\n',text:'\\n'}),\r\n\t\t\t'増やしながら': value=>extend(['+'],{name:'op',toString:()=>'+',text:'+'}),\r\n\t\t\t'減らしながら': value=>extend(['-'],{name:'op',toString:()=>'-',text:'-'}),\r\n\t\t};\r\n\t\tbottomup.load(ops);\r\n\t\tconst gdef={\r\n\t\t\t'variable':node=>{\r\n\t\t\t\tconst {pos}=node[0];\r\n\t\t\t\treturn extend(node,{\r\n\t\t\t\t\tname:'variable',pos,\r\n\t\t\t\t\ttoLocal:function(){this.name='localVar'},\r\n\t\t\t\t\ttoParam:function(){this.name='paramVar'},\r\n\t\t\t\t\ttoRootOrThis:function(){this.name='rootOrThis'},\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t'array':([lsb,elems,rsb])=>{\r\n\t\t\t\treturn extend(elems,{name:'array'});\r\n\t\t\t},\r\n\t\t\t'array_refer':([lsb,is,rsb])=> is,\r\n\t\t\t'then_parts':([moshi,cond])=> cond,\r\n\t\t\t'then':([cond,stmts])=>{\r\n\t\t\t\treturn extend([cond,stmts],{name:'then'});\r\n\t\t\t},\r\n\t\t\t'else':([_,stmts])=>{\r\n\t\t\t\treturn extend([stmts],{name:'else'});\r\n\t\t\t},\r\n\t\t\t'elsif_parts':([_1,_2,_3,cond])=>cond,\r\n\t\t\t'elsif':([cond,stmts])=>{\r\n\t\t\t\treturn extend([cond,stmts],{name:'elsif'});\r\n\t\t\t},\r\n\t\t\t'elsif_list':([elsif_list])=>{\r\n\t\t\t\treturn extend([...elsif_list],{name:'elsif_list'});\r\n\t\t\t},\r\n\t\t\t'if':([..._if])=>{\r\n\t\t\t\treturn extend(_if,{name:'if'});\r\n\t\t\t},\r\n\t\t\t'for_parts':([idt,wo,from,kara,to,made,step,zutsu,op])=>{\r\n\t\t\t\treturn extend([idt,from,to,step,op],{name:'for_parts'});\r\n\t\t\t},\r\n\t\t\t// 'for':node=>{\r\n\t\t\t\t\r\n\t\t\t// },\r\n\t\t\t'for_in_parts':([ary,wo,val])=>{\r\n\t\t\t\treturn extend([ary,val],{name:'for_in_parts'});\r\n\t\t\t},\r\n\t\t\t'loop_parts':([times]) => extend([times],{name:'loop_parts'}),\r\n\t\t\t'while_parts':([cond]) => extend([cond],{name:'while_parts'}),\r\n\t\t\t'func_def_param':node=>{\r\n\t\t\t\tnode.shift(); node.pop();\r\n\t\t\t\treturn extend(node,{name:'func_def_param'});\r\n\t\t\t},\r\n\t\t\t'func_def_parts':([func_name,params])=>{\r\n\t\t\t\treturn extend([func_name,params],{name:'func_def_parts'});\r\n\t\t\t},\r\n\t\t\t'initial_set':([ary,_,value])=>{\r\n\t\t\t\treturn extend([ary,value],{name:'initial_set'});\r\n\t\t\t},\r\n\t\t\t'factor':node=>{\r\n\t\t\t\tconst [{pos}]=node;\r\n\t\t\t\treturn extend(node,{name:'factor',pos});\r\n\t\t\t},\r\n\t\t\t'term':node=>{\r\n\t\t\t\tconst [{pos}]=node;\r\n\t\t\t\treturn extend(node,{name:'term',pos});\r\n\t\t\t},\r\n\t\t\t'paren':node=>{\r\n\t\t\t\tconst [inner]=node.slice(1);\r\n\t\t\t\treturn extend([inner],{name:'paren'});\r\n\t\t\t},\r\n\t\t\t'func_call_param':([_1,params])=>{\r\n\t\t\t\treturn params;\r\n\t\t\t},\r\n\t\t\t'func_call':([f,params])=>{\r\n\t\t\t\treturn extend([f,params],{name:'func_call'});\r\n\t\t\t},\r\n\t\t\t'assign_left':node=>{\r\n\t\t\t\treturn node;\r\n\t\t\t},\r\n\t\t\t'assign':node=>{\r\n\t\t\t\treturn node;\r\n\t\t\t},\r\n\t\t\t'statement_first':([_,statement])=>{\r\n\t\t\t\treturn statement;\r\n\t\t\t},\r\n\t\t\t'statement_after_part1':([_,statement])=>{\r\n\t\t\t\treturn statement;\r\n\t\t\t},\r\n\t\t\t'statement_after_part2':node=>{\r\n\t\t\t\treturn node;\r\n\t\t\t},\r\n\t\t\t'statement_after':([indent,[stmts]])=>{\r\n\t\t\t\treturn stmts;\r\n\t\t\t},\r\n\t\t\t'statement_list':([first,other])=>{\r\n\t\t\t\treturn extend([first,...(other||[])],{name:'statement_list'});\r\n\t\t\t}\r\n\t\t};\r\n\t\tbottomup.load(gdef);\r\n\t\t// bottomup.monitor();\r\n\r\n\t\t// console.log('tree is ', tree);\r\n\t\tconst processed=bottomup.process(tree);\r\n\t\treturn processed;\r\n\t};\r\n\r\n\tconst varsProcess=tree=>{\r\n\t\tconst topdown=(0,_Processor_js__WEBPACK_IMPORTED_MODULE_0__.Topdown)();\r\n\t\tconst ctx=(0,_context_js__WEBPACK_IMPORTED_MODULE_1__.context)();\r\n\r\n\t\tconst varsSwitch=type=>{\r\n\t\t\tif(type=='local')return node=>node.toLocal();\r\n\t\t\tif(type=='param')return node=>node.toParam();\r\n\t\t\tif(type=='rootOrThis')return node=>node.toRootOrThis();\r\n\t\t\treturn node=>node;\r\n\t\t}\r\n\t\tconst gdef={\r\n\t\t\t'variable':node=>{\r\n\t\t\t\tconst {text}=node[0];\r\n\t\t\t\tconst type=ctx.typeof(text);\r\n\t\t\t\tconsole.log('varsType', type);\r\n\t\t\t\tvarsSwitch(type)(node);\r\n\t\t\t\treturn node;\r\n\t\t\t},\r\n\t\t\t'func_def':node=>{\r\n\t\t\t\tconst param = node[0][1][0].map(e=>e.text);\r\n\t\t\t\tctx.enter([],param);\r\n\t\t\t\treturn node;\r\n\t\t\t},\r\n\t\t\t'func_def$':node=>{\r\n\t\t\t\tctx.exit();\r\n\t\t\t\treturn node;\r\n\t\t\t},\r\n\t\t};\r\n\t\ttopdown.load(gdef);\r\n\t\t// topdown.monitor();\r\n\r\n\t\t// console.log('tree is ', tree);\r\n\t\tconst processed=topdown.process(tree);\r\n\t\treturn processed;\r\n\t};\r\n\r\n\treturn class{\r\n\t\tstatic analyze(tree){\r\n\t\t\tconst trimedTree=trimProcess(tree);\r\n\t\t\tconst processedTree=varsProcess(trimedTree)\r\n\t\t\t// console.log('processed:',processedTree);\r\n\t\t\treturn processedTree;\r\n\t\t}\r\n\t};\r\n})();\r\n\n\n//# sourceURL=webpack://dncl2/./js/transpiler/DNCL2Semantics.js?");

/***/ }),

/***/ "./js/transpiler/ExpressionParser2.js":
/*!********************************************!*\
  !*** ./js/transpiler/ExpressionParser2.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ExpressionParser\": () => (/* binding */ ExpressionParser)\n/* harmony export */ });\n/* harmony import */ var _parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser.js */ \"./js/transpiler/parser.js\");\n\r\n\r\nconst ExpressionParser=function () {\r\n\tvar $={};\r\n\tvar EXPSTAT=\"EXPSTAT\";\r\n\t//  first 10     *  +  <>  &&  ||  =     0  later\r\n\tfunction opType(type, prio) {\r\n\t\tvar $={};\r\n\t\t$.eq=function (o) {return type==o.type() && prio==o.prio(); };\r\n\t\t$.type=function (t) { if (!t) return type; else return t==type;};\r\n\t\t$.prio=function () {return prio;};\r\n\t\t$.toString=function () {return \"[\"+type+\":\"+prio+\"]\"; };\r\n\t\treturn $;\r\n\t}\r\n\tfunction composite(a) {\r\n\t\tvar $={};\r\n\t\tvar e=a;\r\n\t\t$.add=function (a) {\r\n\t\t\tif (!e) {\r\n\t\t\t\te=a;\r\n\t\t\t} else {\r\n\t\t\t\te=e.or(a);\r\n\t\t\t}\r\n\t\t};\r\n\t\t$.get=function () {\r\n\t\t\treturn e;\r\n\t\t};\r\n\t\treturn $;\r\n\t}\r\n\tfunction typeComposite() {\r\n\t\tvar built=composite();\r\n\t\t//var lastOP , isBuilt;\r\n\t\tvar $={};\r\n\t\t$.reg=function (type, prio, a) {\r\n\t\t\tvar opt=opType(type, prio);\r\n\t\t\tbuilt.add(a.ret(_parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser.create(function (r) {\r\n\t\t\t\tr.opType=opt;\r\n\t\t\t\treturn r;\r\n\t\t\t})).setName(\"(opType \"+opt+\" \"+a.name+\")\") );\r\n\t\t};\r\n\t\t$.get=function () {return built.get();};\r\n\t\t$.parse=function (st) {\r\n\t\t\treturn $.get().parse(st);\r\n\t\t};\r\n\t\treturn $;\r\n\t}\r\n\tvar prefixOrElement=typeComposite(), postfixOrInfix=typeComposite();\r\n\tvar element=composite();\r\n\tvar trifixes=[];\r\n\t$.element=function (e) {\r\n\t\tprefixOrElement.reg(\"element\", -1, e);\r\n\t\telement.add(e);\r\n\t};\r\n\t$.getElement=function () {return element.get();};\r\n\t$.prefix=function (prio, pre) {\r\n\t\tprefixOrElement.reg(\"prefix\", prio, pre);\r\n\t};\r\n\t$.postfix=function (prio, post) {\r\n\t\tpostfixOrInfix.reg(\"postfix\", prio, post);\r\n\t};\r\n\t$.infixl =function (prio, inf) {\r\n\t\tpostfixOrInfix.reg(\"infixl\", prio, inf);\r\n\t};\r\n\t$.infixr =function (prio, inf) {\r\n\t\tpostfixOrInfix.reg(\"infixr\", prio, inf);\r\n\t};\r\n\t$.infix =function (prio, inf) {\r\n\t\tpostfixOrInfix.reg(\"infix\", prio, inf);\r\n\t};\r\n\t$.trifixr = function (prio, tf1, tf2) {\r\n\t\tpostfixOrInfix.reg(\"trifixr\", prio, tf1);\r\n\t\t//postfixOrInfix.reg(\"trifixr2\", prio, tf2);\r\n\t\ttrifixes[prio]=tf2;\r\n\t};\r\n\t$.custom = function (prio, func) {\r\n\t\t// func :: Elem(of next higher) -> Parser\r\n\t};\r\n\t$.mkInfix=function (f) {\r\n\t\t$.mkInfix.def=f;\r\n\t};\r\n\t$.mkInfix.def=function (left,op,right) {\r\n\t\treturn _parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser.setRange({type:\"infix\", op:op, left: left, right: right});\r\n\t};\r\n\t$.mkInfixl=function (f) {\r\n\t\t$.mkInfixl.def=f;\r\n\t};\r\n\t$.mkInfixl.def=function (left, op , right) {\r\n\t\treturn _parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser.setRange({type:\"infixl\",op:op ,left:left, right:right});\r\n\t};\r\n\t$.mkInfixr=function (f) {\r\n\t\t$.mkInfixr.def=f;\r\n\t};\r\n\t$.mkInfixr.def=function (left, op , right) {\r\n\t\treturn _parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser.setRange({type:\"infixr\",op:op ,left:left, right:right});\r\n\t};\r\n\t$.mkPrefix=function (f) {\r\n\t\t$.mkPrefix.def=f;\r\n\t};\r\n\t$.mkPrefix.def=function (op , right) {\r\n\t\treturn _parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser.setRange({type:\"prefix\", op:op, right:right});\r\n\t};\r\n\t$.mkPostfix=function (f) {\r\n\t\t$.mkPostfix.def=f;\r\n\t};\r\n\t$.mkPostfix.def=function (left, op) {\r\n\t\treturn _parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser.setRange({type:\"postfix\", left:left, op:op});\r\n\t};\r\n\t$.mkTrifixr=function(f) {\r\n\t\t$.mkTrifixr.def=f;\r\n\t};\r\n\t$.mkTrifixr.def=function (left, op1, mid, op2, right) {\r\n\t\treturn _parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser.setRange({type:\"trifixr\", left:left, op1:op1, mid:mid, op2:op2, right:right});\r\n\t};\r\n\t$.build= function () {\r\n\t\t//postfixOrInfix.build();\r\n\t\t//prefixOrElement.build();\r\n\t\t$.built= _parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser.create(function (st) {\r\n\t\t\treturn parse(0,st);\r\n\t\t}).setName(\"ExpBuilt\");\r\n\t\treturn $.built;\r\n\t};\r\n\tfunction dump(st, lbl) {\r\n\t\treturn ;\r\n\t\t/*var s=st.src.str;\r\n\t\tconsole.log(\"[\"+lbl+\"] \"+s.substring(0,st.pos)+\"^\"+s.substring(st.pos)+\r\n\t\t\t\t\" opType=\"+ st.opType+\"  Succ = \"+st.isSuccess()+\" res=\"+st.result[0]);*/\r\n\t}\r\n\tfunction parse(minPrio, st) {\r\n\t\tvar stat=0, res=st ,  opt,/*const*/pex,inf;\r\n\t\tdump(st,\" start minprio= \"+minPrio);\r\n\t\tst=prefixOrElement.parse(st);\r\n\t\tdump(st,\" prefixorelem \"+minPrio);\r\n\t\tif (!st.isSuccess()) {\r\n\t\t\treturn st;\r\n\t\t}\r\n\t\t//p2=st.result[0];\r\n\t\topt=st.opType;\r\n\t\tif (opt.type(\"prefix\") ) {\r\n\t\t\t// st = -^elem\r\n\t\t\tvar pre=st.result[0];\r\n\t\t\tst=parse(opt.prio(), st);\r\n\t\t\tif (!st.isSuccess()) {\r\n\t\t\t\treturn st;\r\n\t\t\t}\r\n\t\t\t\t// st: Expr    st.pos = -elem^\r\n\t\t\tpex=$.mkPrefix.def(pre, st.result[0]);\r\n\t\t\tres=st.clone();  //  res:Expr\r\n\t\t\tres.result=[pex]; // res:prefixExpr  res.pos= -elem^\r\n\t\t\tif (!st.nextPostfixOrInfix) {\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t\t// st.next =  -elem+^elem\r\n\t\t\tst=st.nextPostfixOrInfix;  // st: postfixOrInfix\r\n\t\t} else { //elem\r\n\t\t\t//p=p2;\r\n\t\t\tres=st.clone(); // res:elemExpr   res =  elem^\r\n\t\t\tst=postfixOrInfix.parse(st);\r\n\t\t\tif (!st.isSuccess()) {\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// assert st:postfixOrInfix  res:Expr\r\n\t\twhile (true) {\r\n\t\t\tdump(st,\"st:pi\"); dump(res,\"res:ex\");\r\n\t\t\topt=st.opType;\r\n\t\t\tif (opt.prio()<minPrio) {\r\n\t\t\t\tres.nextPostfixOrInfix=st;\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t\t// assert st:postfixOrInfix  res:Expr\r\n\t\t\tif (opt.type(\"postfix\")) {\r\n\t\t\t\t// st:postfix\r\n\t\t\t\tpex=$.mkPostfix.def(res.result[0],st.result[0]);\r\n\t\t\t\tres=st.clone();\r\n\t\t\t\tres.result=[pex]; // res.pos= expr++^\r\n\t\t\t\tdump(st, \"185\");\r\n\t\t\t\tst=postfixOrInfix.parse(st); // st. pos= expr++--^\r\n\t\t\t\tif (!st.isSuccess()) {\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t} else if (opt.type(\"infixl\")){  //x+y+z\r\n\t\t\t\t// st: infixl\r\n\t\t\t\tinf=st.result[0];\r\n\t\t\t\tst=parse(opt.prio()+1, st);\r\n\t\t\t\tif (!st.isSuccess()) {\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t\t// st: expr   st.pos=  expr+expr^\r\n\t\t\t\tpex=$.mkInfixl.def(res.result[0], inf , st.result[0]);\r\n\t\t\t\tres=st.clone();\r\n\t\t\t\tres.result=[pex]; //res:infixlExpr\r\n\t\t\t\tif (!st.nextPostfixOrInfix) {\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t\tst=st.nextPostfixOrInfix;\r\n\t\t\t} else if (opt.type(\"infixr\")) { //a=^b=c\r\n\t\t\t\t// st: infixr\r\n\t\t\t\tinf=st.result[0];\r\n\t\t\t\tst=parse(opt.prio() ,st);\r\n\t\t\t\tif (!st.isSuccess()) {\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t\t// st: expr   st.pos=  a=b=c^\r\n\t\t\t\tpex=$.mkInfixr.def(res.result[0], inf , st.result[0]);\r\n\t\t\t\tres=st.clone();\r\n\t\t\t\tres.result=[pex]; //res:infixrExpr\r\n\t\t\t\tif (!st.nextPostfixOrInfix) {\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t\tst=st.nextPostfixOrInfix;\r\n\t\t\t} else if (opt.type(\"trifixr\")) { //left?^mid:right\r\n\t\t\t\t// st: trifixr\r\n\t\t\t\tvar left=res.result[0];\r\n\t\t\t\tvar inf1=st.result[0];  // inf1 =  ?\r\n\t\t\t\tst=parse(opt.prio()+1 ,st);\r\n\t\t\t\tif (!st.isSuccess()) {\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t\t// st= expr   st.pos=  left?mid^:right\r\n\t\t\t\tvar mid=st.result[0];\r\n\t\t\t\tst=trifixes[opt.prio()].parse(st);\r\n\t\t\t\t// st= :      st.pos= left?mid:^right;\r\n\t\t\t\tif (!st.isSuccess()) {\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t\tvar inf2= st.result[0];\r\n\t\t\t\tst=parse(opt.prio() ,st);\r\n\t\t\t\tif (!st.isSuccess()) {\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t\tvar right=st.result[0];\r\n\t\t\t\t// st=right      st.pos= left?mid:right^;\r\n\t\t\t\tpex=$.mkTrifixr.def(left, inf1 , mid, inf2, right);\r\n\t\t\t\tres=st.clone();\r\n\t\t\t\tres.result=[pex]; //res:infixrExpr\r\n\t\t\t\tif (!st.nextPostfixOrInfix) {\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t\tst=st.nextPostfixOrInfix;\r\n\t\t\t} else { // infix\r\n\t\t\t\t// st: infixl\r\n\t\t\t\tinf=st.result[0];\r\n\t\t\t\tst=parse(opt.prio()+1 ,st);\r\n\t\t\t\tif (!st.isSuccess()) {\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t\t// st: expr   st.pos=  expr+expr^\r\n\t\t\t\tpex=$.mkInfix.def(res.result[0], inf , st.result[0]);\r\n\t\t\t\tres=st.clone();\r\n\t\t\t\tres.result=[pex]; //res:infixExpr\r\n\t\t\t\tif (!st.nextPostfixOrInfix) {\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t\tst=st.nextPostfixOrInfix;\r\n\t\t\t\tif (opt.prio()==st.opType.prio()) {\r\n\t\t\t\t\tres.success=false;\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// assert st:postfixOrInfix  res:Expr\r\n\t\t}\r\n\t}\r\n\t$.lazy = function () {\r\n\t\treturn _parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser.create(function (st) {\r\n\t\t\treturn $.built.parse(st);\r\n\t\t});\r\n\t};\r\n\treturn $;\r\n};\r\n\n\n//# sourceURL=webpack://dncl2/./js/transpiler/ExpressionParser2.js?");

/***/ }),

/***/ "./js/transpiler/Grammer.js":
/*!**********************************!*\
  !*** ./js/transpiler/Grammer.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Grammer\": () => (/* binding */ Grammer)\n/* harmony export */ });\n/* harmony import */ var _parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser.js */ \"./js/transpiler/parser.js\");\n/* harmony import */ var _ExpressionParser2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ExpressionParser2.js */ \"./js/transpiler/ExpressionParser2.js\");\n\r\n\r\n\r\nconst Grammer = (()=>{\r\n\tconst gdef={};\r\n\treturn class{\r\n\t\tstatic load(g){\r\n\t\t\tfor(const [name, value] of Object.entries(g)){\r\n\t\t\t\tconst syntax=(()=>{\r\n\t\t\t\t\tif(Array.isArray(value)){\r\n\t\t\t\t\t\tif(typeof value[0]=='string')value.unshift(this.get(value.shift()));\r\n\t\t\t\t\t\treturn value.reduce((one,two)=>one.and((typeof two=='string')?this.get(two):two));\r\n\t\t\t\t\t}else return value;\r\n\t\t\t\t})();\r\n\t\t\t\tthis.set(name, syntax);\r\n\t\t\t}\r\n\t\t}\r\n\t\tstatic extend(ary,obj){\r\n\t\t\tfor(const [key,value] of Object.entries(obj)) ary[key]=value; \r\n\t\t\treturn ary;\r\n\t\t}\r\n\t\tstatic set(name,syntax){\r\n\t\t\tgdef[name]=syntax.ret(function(){return this.extend([...arguments],{name});}.bind(this));\r\n\t\t}\r\n\t\tstatic get(name){\r\n\t\t\tif((typeof name=='string')&&(name.match(' as '))){\r\n\t\t\t\tconst [from,to]=name.split(' as ');\r\n\t\t\t\tthis.set(to,this.get(from));\r\n\t\t\t\tname=to;\r\n\t\t\t}\r\n\t\t\treturn gdef[name]||(()=>{\r\n\t\t\t\tgdef[name]=null;\r\n\t\t\t\treturn _parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser.lazy(()=>gdef[name])\r\n\t\t\t})();\r\n\t\t}\r\n\t\tstatic build(){\r\n\t\t\treturn gdef['program'];\r\n\t\t}\r\n\t\tstatic monitor(){console.log('monitor: ', gdef);}\r\n\t\tstatic expr(defs){\r\n\t\t\tconst {elem,ops}=defs;\r\n\t\t\tconst e=(0,_ExpressionParser2_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionParser)();\r\n\t\t\te.element((typeof elem=='string')?this.get(elem):elem);\r\n\t\t\tconst regist={\r\n\t\t\t\t'prefix': (prio,op)=>e.prefix(prio,op),\r\n\t\t\t\t'postfix': (prio,op)=>e.postfix(prio,op),\r\n\t\t\t\t'trifixr': (prio,op)=>e.trifixr(prio,op),\r\n\t\t\t\t'infixl': (prio,op)=>e.infixl(prio,op),\r\n\t\t\t\t'infixr': (prio,op)=>e.infixr(prio,op),\r\n\t\t\t};\r\n\t\t\t// console.log('elem',elem);\r\n\t\t\t// console.log('ops',ops);\r\n\t\t\tconst dict={};\r\n\t\t\tfor(const [prio,[type,op]] of Object.entries(ops)){\r\n\t\t\t\tconst [from,to]=type.split(' as ');\r\n\t\t\t\tdict[from]=to||from;\r\n\t\t\t\tregist[from](prio,op);\r\n\t\t\t}\r\n\t\t\te.mkInfixl(function(){\r\n\t\t\t\treturn this.extend([...arguments],{name:dict['infixl']||'infixl'});\r\n\t\t\t}.bind(this));\r\n\t\t\te.mkInfixr(function(){\r\n\t\t\t\treturn this.extend([...arguments],{name:dict['infixr']||'infixr'});\r\n\t\t\t}.bind(this));\r\n\t\t\te.mkPrefix(function(){\r\n\t\t\t\treturn this.extend([...arguments],{name:dict['prefix']||'prefix'});\r\n\t\t\t}.bind(this));\r\n\t\t\te.mkPostfix(function(){\r\n\t\t\t\treturn this.extend([...arguments],{name:dict['postfix']||'postfix'});\r\n\t\t\t}.bind(this));\r\n\t\t\te.mkTrifixr(function(){\r\n\t\t\t\treturn this.extend([...arguments],{name:dict['Trifixr']||'Trifixr'});\r\n\t\t\t}.bind(this));\r\n\t\t\treturn e.build();\r\n\t\t}\r\n\t\tstatic memo(value,label){\r\n\t\t\tif(typeof value=='string')value=this.get(value);\r\n\t\t\tthis.set(label,value);\r\n\t\t\treturn label;\r\n\t\t}\r\n\t\tstatic and(){\r\n\t\t\tconst value=Array.prototype.slice.call(arguments);\r\n\t\t\tif(typeof value[0]=='string')value.unshift(this.get(value.shift()));\r\n\t\t\treturn value.reduce((one,two)=>one.and((typeof two=='string')?this.get(two):two).ret(function(){return [...arguments];}));\r\n\t\t}\r\n\t\tstatic or(){\r\n\t\t\tconst value=Array.prototype.slice.call(arguments);\r\n\t\t\tif(typeof value[0]=='string')value.unshift(this.get(value.shift()));\r\n\t\t\treturn value.reduce((one,two)=>one.or((typeof two=='string')?this.get(two):two));\r\n\t\t}\r\n\t\tstatic rep0(value){\r\n\t\t\tif(typeof value=='string')value=this.get(value);\r\n\t\t\treturn value.rep0();\r\n\t\t}\r\n\t\tstatic rep1(value){\r\n\t\t\tif(typeof value=='string')value=this.get(value);\r\n\t\t\treturn value.rep1();\r\n\t\t}\r\n\t\tstatic sep0(value,sep){\r\n\t\t\tif(typeof value=='string')value=this.get(value);\r\n\t\t\tif(typeof sep=='string')sep=this.get(sep);\r\n\t\t\treturn value.sep0(sep,true);\r\n\t\t}\r\n\t\tstatic sep1(value,sep){\r\n\t\t\tif(typeof value=='string')value=this.get(value);\r\n\t\t\tif(typeof sep=='string')sep=this.get(sep);\r\n\t\t\treturn value.sep1(sep,true);\r\n\t\t}\r\n\t\tstatic opt(value){\r\n\t\t\tif(typeof value=='string')value=this.get(value);\r\n\t\t\treturn value.opt();\r\n\t\t}\r\n\t};\r\n});\r\n\r\n\n\n//# sourceURL=webpack://dncl2/./js/transpiler/Grammer.js?");

/***/ }),

/***/ "./js/transpiler/Processor.js":
/*!************************************!*\
  !*** ./js/transpiler/Processor.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Bottomup\": () => (/* binding */ Bottomup),\n/* harmony export */   \"Processor\": () => (/* binding */ Processor),\n/* harmony export */   \"Topdown\": () => (/* binding */ Topdown)\n/* harmony export */ });\nconst Processor=(()=>{\r\n\tconst sdefs={};\r\n\treturn class{\r\n\t\tstatic get(name){\r\n\t\t\tif(!name)return node=>node;\r\n\t\t\tif(!sdefs[name])return node=>node;\r\n\t\t\treturn sdefs[name];\r\n\t\t}\r\n\t\tstatic set(name,f){ sdefs[name]=f; }\r\n\t\tstatic load(sdefs){\r\n\t\t\tfor(const [name,f] of Object.entries(sdefs))this.set(name,f);\r\n\t\t}\r\n\t\tstatic monitor(){ console.log(sdefs); }\r\n\t};\r\n});\r\n\r\nconst Bottomup=(()=>{\r\n\treturn class extends Processor(){\r\n\t\tstatic process(node){\r\n\t\t\t// console.log('node:',node?.name);\r\n\t\t\t// console.log(node);\r\n\t\t\tif(!node)return node;\r\n\t\t\tif(!Array.isArray(node))return this.get(node?.name)(node);\r\n\t\t\tfor(const [i,subnode] of Object.entries(node))node[i]=this.process(subnode);\r\n\t\t\t// console.log('processor:', this.get(node.name));\r\n\t\t\t// console.log('this is ', node.name);\r\n\t\t\treturn this.get(node.name)(node);\r\n\t\t}\r\n\t};\r\n});\r\n\r\nconst Topdown=(()=>{\r\n\treturn class extends Processor(){\r\n\t\tstatic process(node){\r\n\t\t\t// console.log('node:',node?.name);\r\n\t\t\t// console.log(node);\r\n\t\t\tif(!node)return node;\r\n\t\t\tif(!Array.isArray(node))return this.get(node?.name)(node);\r\n\t\t\tthis.get(node.name)(node);\r\n\t\t\tfor(const [i,subnode] of Object.entries(node))node[i]=this.process(subnode);\r\n\t\t\tthis.get(node.name+'$')(node);\r\n\t\t\t// console.log('processor:', this.get(node.name));\r\n\t\t\t// console.log('this is ', node.name);\r\n\t\t\treturn node;\r\n\t\t}\r\n\t};\r\n});\r\n\n\n//# sourceURL=webpack://dncl2/./js/transpiler/Processor.js?");

/***/ }),

/***/ "./js/transpiler/context.js":
/*!**********************************!*\
  !*** ./js/transpiler/context.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"context\": () => (/* binding */ context)\n/* harmony export */ });\nconst context=(()=>{\r\n\tconst rootOrThis=['root','self','this','自分'];\r\n\tconst localScope=[[]];\r\n\tconst paramScope=[['_rest']];\r\n\treturn class{\r\n\t\tstatic enter(local,param){ localScope.unshift(local); paramScope.unshift(param); }\r\n\t\tstatic exit(){ localScope.shift(); paramScope.shift(); }\r\n\t\tstatic typeof(name){\r\n\t\t\tif(rootOrThis.includes(name))return 'rootOrThis';\r\n\t\t\tfor(const i in localScope){\r\n\t\t\t\tif(paramScope[i].includes(name))return 'param';\r\n\t\t\t\tif(localScope[i].includes(name))return 'local';\r\n\t\t\t}\r\n\t\t\treturn 'prop';\r\n\t\t}\r\n\t\tstatic monitor(){\r\n\t\t\tconsole.log(`now locals: [[${localScope.map(e=>e.join(',')).join('],[')}]]`);\r\n\t\t\tconsole.log(`now params: [[${paramScope.map(e=>e.join(',')).join('],[')}]]`);\r\n\t\t}\r\n\t};\r\n});\r\n\n\n//# sourceURL=webpack://dncl2/./js/transpiler/context.js?");

/***/ }),

/***/ "./js/transpiler/parser.js":
/*!*********************************!*\
  !*** ./js/transpiler/parser.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Parser\": () => (/* binding */ Parser)\n/* harmony export */ });\nconst Parser=function () {\r\n\tfunction extend(dst, src) {\r\n\t\tvar i;\r\n\t\tfor(i in src){\r\n\t\t\tdst[i]=src[i];\r\n\t\t}\r\n\t\treturn dst;\r\n\t}\r\n\tvar $={\r\n\t\tconsoleBuffer:\"\",\r\n\t\toptions: {traceTap:false, optimizeFirst: true, profile: false ,\r\n\t\tverboseFirst: false,traceFirstTbl:false},\r\n\t\tParser: Parser,\r\n\t\tStringParser: StringParser,\r\n\t\tnc: nc\r\n\t};\r\n\t$.dispTbl=function (tbl) {\r\n\t\tvar buf=\"\";\r\n\t\tvar h={};\r\n\t\tvar n,i;\r\n\t\tif (!tbl) return buf;\r\n\t\tfor (i in tbl) {// tbl:{char:Parser}   i:char\r\n\t\t\tn=tbl[i].name;\r\n\t\t\tif (!h[n]) h[n]=\"\";\r\n\t\t\th[n]+=i;\r\n\t\t}\r\n\t\tfor (n in h) {\r\n\t\t\tbuf+=h[n]+\"->\"+n+\",\";\r\n\t\t}\r\n\t\treturn buf;\r\n\t};\r\n\t//var console={log:function (s) { $.consoleBuffer+=s; }};\r\n\tfunction _debug(s) {console.log(s);}\r\n\tfunction Parser(parseFunc){\r\n\t\tif ($.options.traceTap) {\r\n\t\t\tthis.parse=function(s){\r\n\t\t\t\tconsole.log(\"tap: name=\"+this.name+\"  pos=\"+(s?s.pos:\"?\"));\r\n\t\t\t\tvar r=parseFunc.apply(this,[s]);\r\n\t\t\t\tvar img=\"NOIMG\";\r\n\t\t\t\tif (r.src && r.src.str) {\r\n\t\t\t\t\timg=r.src.str.substring(r.pos-3,r.pos)+\"^\"+r.src.str.substring(r.pos,r.pos+3);\r\n\t\t\t\t}\r\n\t\t\t\tif (r.src && r.src.tokens) {\r\n\t\t\t\t\timg=r.src.tokens[r.pos-1]+\"[\"+r.src.tokens[r.pos]+\"]\"+r.src.tokens[r.pos+1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(\"/tap: name=\"+this.name+\r\n\t\t\t\t\t\t\" pos=\"+(s?s.pos:\"?\")+\"->\"+(r?r.pos:\"?\")+\" \"+img+\" res=\"+(r?r.success:\"?\"));\r\n\t\t\t\treturn r;\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tthis.parse=parseFunc;\r\n\t\t}\r\n\t}\r\n\tParser.create=function(parseFunc) { // (State->State)->Parser\r\n\t\treturn new Parser(parseFunc);\r\n\t};\r\n\t$.create=Parser.create;\r\n\tfunction nc(v,name) {\r\n\t\tif (v==null) throw name+\" is null!\";\r\n\t\treturn v;\r\n\t}\r\n\textend(Parser.prototype, {// class Parser\r\n\t\t// Parser.parse:: State->State\r\n\t\texcept: function (f) {\r\n\t\t\tvar t=this;\r\n\t\t\treturn this.ret(Parser.create(function (res) {\r\n\t\t\t\t//var res=t.parse(s);\r\n\t\t\t\t//if (!res.success) return res;\r\n\t\t\t\tif (f.apply({}, res.result)) {\r\n\t\t\t\t\tres.success=false;\r\n\t\t\t\t}\r\n\t\t\t\treturn res;\r\n\t\t\t}).setName(\"(except \"+t.name+\")\"));\r\n\t\t},\r\n\t\tnoFollow: function (p) {\r\n\t\t\tvar t=this;\r\n\t\t\tnc(p,\"p\");\r\n\t\t\treturn this.ret(Parser.create(function (res) {\r\n\t\t\t\t//var res=t.parse(s);\r\n\t\t\t\t//if (!res.success) return res;\r\n\t\t\t\tvar res2=p.parse(res);\r\n\t\t\t\tres.success=!res2.success;\r\n\t\t\t\treturn res;\r\n\t\t\t}).setName(\"(\"+t.name+\" noFollow \"+p.name+\")\"));\r\n\t\t},\r\n\t\tandNoUnify: function(next) {// Parser.and:: (Function|Parser)  -> Parser\r\n\t\t\tnc(next,\"next\"); // next==next\r\n\t\t\tvar t=this; // Parser\r\n\t\t\tvar res=Parser.create(function(s){ //s:State\r\n\t\t\t\tvar r1=t.parse(s); // r1:State\r\n\t\t\t\tif (!r1.success) return r1;\r\n\t\t\t\tvar r2=next.parse(r1); //r2:State\r\n\t\t\t\tif (r2.success) {\r\n\t\t\t\t\tr2.result=r1.result.concat(r2.result); // concat===append built in func in Array\r\n\t\t\t\t}\r\n\t\t\t\treturn r2;\r\n\t\t\t});\r\n\t\t\treturn res.setName(\"(\"+this.name+\" \"+next.name+\")\");\r\n\t\t},\r\n\t\tand: function(next) {// Parser.and:: Parser  -> Parser\r\n\t\t\tvar res=this.andNoUnify(next);\r\n\t\t\t//if (!$.options.optimizeFirst) return res;\r\n\t\t\tif (!this._first) return res;\r\n\t\t\tvar tbl=this._first.tbl;\r\n\t\t\tvar ntbl={};\r\n\t\t\t//  tbl           ALL:a1  b:b1     c:c1\r\n\t\t\t//  next.tbl      ALL:a2           c:c2     d:d2\r\n\t\t\t//           ALL:a1>>next   b:b1>>next c:c1>>next\r\n\t\t\tfor (var c in tbl) {\r\n\t\t\t\tntbl[c]=tbl[c].andNoUnify(next);\r\n\t\t\t}\r\n\t\t\tres=Parser.fromFirst(this._first.space, ntbl);\r\n\t\t\tres.setName(\"(\"+this.name+\" >> \"+next.name+\")\");\r\n\t\t\tif ($.options.verboseFirst) {\r\n\t\t\t\tconsole.log(\"Created aunify name=\" +res.name+\" tbl=\"+$.dispTbl(ntbl));\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t},\r\n\t\tretNoUnify: function (f) {\r\n\t\t\tvar t=this;\r\n\t\t\tvar p;\r\n\t\t\tif (typeof f==\"function\") {\r\n\t\t\t\tp=Parser.create(function (r1) {\r\n\t\t\t\t\tvar r2=r1.clone();\r\n\t\t\t\t\tr2.result=[ f.apply({}, r1.result) ];\r\n\t\t\t\t\treturn r2;\r\n\t\t\t\t}).setName(\"retfunc\");\r\n\t\t\t} else p=f;\r\n\t\t\tvar res=Parser.create(function(s){ //s:State\r\n\t\t\t\tvar r1=t.parse(s); // r1:State\r\n\t\t\t\tif (!r1.success) return r1;\r\n\t\t\t\treturn p.parse(r1);\r\n\t\t\t\t/*var r2=r1.clone();\r\n\t\t\t\tr2.result=[ f.apply({}, r1.result) ];\r\n\t\t\t\treturn r2;*/\r\n\t\t\t}).setName(\"(\"+this.name+\" >= \"+p.name+\")\");\r\n\t\t\treturn res;\r\n\t\t},\r\n\t\tret: function(next) {// Parser.ret:: (Function|Parser)  -> Parser\r\n\t\t\tif (!this._first) return this.retNoUnify(next);\r\n\t\t\tvar tbl=this._first.tbl;\r\n\t\t\tvar ntbl={};\r\n\t\t\tfor (var c in tbl) {\r\n\t\t\t\tntbl[c]=tbl[c].retNoUnify(next);\r\n\t\t\t}\r\n\t\t\tvar res=Parser.fromFirst(this._first.space, ntbl);\r\n\t\t\tres.setName(\"(\"+this.name+\" >>= \"+next.name+\")\");\r\n\t\t\tif ($.options.verboseFirst) {\r\n\t\t\t\tconsole.log(\"Created runify name=\" +res.name+\" tbl=\"+$.dispTbl(ntbl));\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\tthis._first={space: space, chars:String};\r\n\t\tthis._first={space: space, tbl:{char:Parser}};\r\n\t*/\r\n\t\tfirst: function (space, ct) {\r\n\t\t\tif (!$.options.optimizeFirst) return this;\r\n\t\t\tif (space==null) throw \"Space is null2!\";\r\n\t\t\tif (typeof ct==\"string\") {\r\n\t\t\t\t\tvar tbl={};\r\n\t\t\t\t\tfor (var i=0; i<ct.length ; i++) {\r\n\t\t\t\t\t\ttbl[ct.substring(i,i+1)]=this;\r\n\t\t\t\t\t}\r\n\t\t\t\t//this._first={space: space, tbl:tbl};\r\n\t\t\t\treturn Parser.fromFirst(space,tbl).setName(\"(fst \"+this.name+\")\");\r\n//        \t\tthis._first={space: space, chars:ct};\r\n\t\t\t} else if (ct==null) {\r\n\t\t\t\treturn Parser.fromFirst(space,{ALL:this}).setName(\"(fst \"+this.name+\")\");\r\n\t\t\t\t//this._first={space:space, tbl:{ALL:this}};\r\n\t\t\t} else if (typeof ct==\"object\") {\r\n\t\t\t\tthrow \"this._first={space: space, tbl:ct}\";\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tfirstTokens: function (tokens) {\r\n\t\t\tif (!$.options.optimizeFirst) return this;\r\n\t\t\tif (typeof tokens==\"string\") tokens=[tokens];\r\n\t\t\tvar tbl={};\r\n\t\t\t\tif (tokens) {\r\n\t\t\t\t\tvar t=this;\r\n\t\t\t\t\ttokens.forEach(function (token) {\r\n\t\t\t\t\ttbl[token]=t;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\ttbl.ALL=this;\r\n\t\t\t}\r\n\t\t\treturn Parser.fromFirstTokens(tbl).setName(\"(fstT \"+this.name+\")\");\r\n\t\t},\r\n\t\tunifyFirst: function (other) {\r\n\t\t\tvar thiz=this;\r\n\t\t\tfunction or(a,b) {\r\n\t\t\t\tif (!a) return b;\r\n\t\t\t\tif (!b) return a;\r\n\t\t\t\treturn a.orNoUnify(b).checkTbl();\r\n\t\t\t}\r\n\t\t\tvar tbl={}; // tbl.* includes tbl.ALL\r\n\t\t\tthis.checkTbl();\r\n\t\t\tother.checkTbl();\r\n\t\t\tfunction mergeTbl() {\r\n\t\t\t//   {except_ALL: contains_ALL}\r\n\t\t\t\tvar t2=other._first.tbl;\r\n\t\t\t\t//before tbl={ALL:a1, b:b1, c:c1}   t2={ALL:a2,c:c2,d:d2}\r\n\t\t\t\t//       b1 conts a1  c1 conts a1     c2 conts a2   d2 conts a2\r\n\t\t\t\t//after  tbl={ALL:a1|a2 , b:b1|a2    c:c1|c2    d:a1|d2 }\r\n\t\t\t\tvar keys={},k;\r\n\t\t\t\tfor ( k in tbl) { /*if (d) console.log(\"tbl.k=\"+k);*/ keys[k]=1;}\r\n\t\t\t\tfor ( k in t2)  { /*if (d) console.log(\"t2.k=\"+k);*/ keys[k]=1;}\r\n\t\t\t\tdelete keys.ALL;\r\n\t\t\t\tif (tbl.ALL || t2.ALL) {\r\n\t\t\t\t\ttbl.ALL=or(tbl.ALL, t2.ALL);\r\n\t\t\t\t}\r\n\t\t\t\tfor ( k in keys ) {\r\n\t\t\t\t\t//if (d) console.log(\"k=\"+k);\r\n\t\t\t\t\t//if (tbl[k] && !tbl[k].parse) throw \"tbl[\"+k+\"] = \"+tbl[k];\r\n\t\t\t\t\t//if (t2[k] && !t2[k].parse) throw \"t2[\"+k+\"] = \"+tbl[k];\r\n\t\t\t\t\tif (tbl[k] && t2[k]) {\r\n\t\t\t\t\t\ttbl[k]=or(tbl[k],t2[k]);\r\n\t\t\t\t\t} else if (tbl[k] && !t2[k]) {\r\n\t\t\t\t\t\ttbl[k]=or(tbl[k],t2.ALL);\r\n\t\t\t\t\t} else if (!tbl[k] && t2[k]) {\r\n\t\t\t\t\t\ttbl[k]=or(tbl.ALL, t2[k]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\textend(tbl, this._first.tbl);\r\n\t\t\tmergeTbl();\r\n\t\t\tvar res=Parser.fromFirst(this._first.space, tbl).setName(\"(\"+this.name+\")U(\"+other.name+\")\");\r\n\t\t\tif ($.options.verboseFirst) console.log(\"Created unify name=\" +res.name+\" tbl=\"+$.dispTbl(tbl));\r\n\t\t\treturn res;\r\n\t\t},\r\n\t\tor: function(other) { // Parser->Parser\r\n\t\t\tnc(other,\"other\");\r\n\t\t\t\tif (this._first && other._first &&\r\n\t\t\t\t\t\tthis._first.space && this._first.space===other._first.space) {\r\n\t\t\t\treturn this.unifyFirst(other);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ($.options.verboseFirst) {\r\n\t\t\t\t\t\tconsole.log(\"Cannot unify\"+this.name+\" || \"+other.name+\" \"+this._first+\" - \"+other._first);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.orNoUnify(other);\r\n\t\t\t\t}\r\n\t\t},\r\n\t\torNoUnify: function (other) {\r\n\t\t\t\tvar t=this;  // t:Parser\r\n\t\t\tvar res=Parser.create(function(s){\r\n\t\t\t\tvar r1=t.parse(s); // r1:State\r\n\t\t\t\tif (!r1.success){\r\n\t\t\t\t\tvar r2=other.parse(s); // r2:State\r\n\t\t\t\t\treturn r2;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn r1;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tres.name=\"(\"+this.name+\")|(\"+other.name+\")\";\r\n\t\t\treturn res;\r\n\t\t},\r\n\t\tsetName: function (n) {\r\n\t\t\tthis.name=n;\r\n\t\t\tif (this._first) {\r\n\t\t\t\t/*var tbl=this._first.tbl;\r\n\t\t\t\tfor (var i in tbl) {\r\n\t\t\t\t\ttbl[i].setName(\"(elm \"+i+\" of \"+n+\")\");\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tprofile: function (name) {\r\n\t\t\tif ($.options.profile) {\r\n\t\t\t\tthis.parse=this.parse.profile(name || this.name);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\trepN: function(min){\r\n\t\t\tvar p=this;\r\n\t\t\tif (!min) min=0;\r\n\t\t\tvar res=Parser.create(function(s) {\r\n\t\t\t\tvar current=s;\r\n\t\t\t\tvar result=[];\r\n\t\t\t\twhile(true){\r\n\t\t\t\t\tvar next=p.parse(current);\r\n\t\t\t\t\tif(!next.success) {\r\n\t\t\t\t\t\tvar res;\r\n\t\t\t\t\t\tif (result.length>=min) {\r\n\t\t\t\t\t\t\tres=current.clone();\r\n\t\t\t\t\t\t\tres.result=[result];\r\n\t\t\t\t\t\t\tres.success=true;\r\n\t\t\t\t\t\t\t//console.log(\"rep0 res=\"+disp(res.result));\r\n\t\t\t\t\t\t\treturn res;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tres=s.clone();\r\n\t\t\t\t\t\t\tres.success=false;\r\n\t\t\t\t\t\t\treturn res;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.push(next.result[0]);\r\n\t\t\t\t\t\tcurrent=next;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t//if (min>0) res._first=p._first;\r\n\t\t\treturn res.setName(\"(\"+p.name+\" * \"+min+\")\");\r\n\t\t},\r\n\t\trep0: function () { return this.repN(0); },\r\n\t\trep1: function () { return this.repN(1); },\r\n\t\topt: function () {\r\n\t\t\tvar t=this;\r\n\t\t\treturn Parser.create(function (s) {\r\n\t\t\t\tvar r=t.parse(s);\r\n\t\t\t\tif (r.success) {\r\n\t\t\t\t\treturn r;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts=s.clone();\r\n\t\t\t\t\ts.success=true;\r\n\t\t\t\t\ts.result=[null];\r\n\t\t\t\t\treturn s;\r\n\t\t\t\t}\r\n\t\t\t}).setName(\"(\"+t.name+\")?\");\r\n\t\t},\r\n\t\tsep1: function(sep, valuesToArray) {\r\n\t\t\tvar value=this;\r\n\t\t\tnc(value,\"value\");nc(sep,\"sep\");\r\n\t\t\tvar tail=sep.and(value).ret(function(r1, r2) {\r\n\t\t\t\tif(valuesToArray) return r2;\r\n\t\t\t\treturn {sep:r1, value:r2};\r\n\t\t\t});\r\n\t\t\treturn value.and(tail.rep0()).ret(function(r1, r2){\r\n\t\t\t\tvar i;\r\n\t\t\t\tif (valuesToArray) {\r\n\t\t\t\t\tvar r=[r1].concat(r2);\r\n\t\t\t\t\t/*for (i in r2) {\r\n\t\t\t\t\t\tr.push(r2[i]);\r\n\t\t\t\t\t}*/ // NO good if Array is monkey-patched\r\n\t\t\t\t\treturn r;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn {head:r1,tails:r2};\r\n\t\t\t\t}\r\n\t\t\t}).setName(\"(sep1 \"+value.name+\"~~\"+sep.name+\")\");\r\n\t\t},\r\n\t\tsep0: function(s){\r\n\t\t\treturn this.sep1(s,true).opt().ret(function (r) {\r\n\t\t\t\tif (!r) return [];\r\n\t\t\t\treturn r;\r\n\t\t\t});\r\n\t\t},\r\n\t\ttap: function (msg) {\r\n\t\t\t//if (!$.traceTap) return this;\r\n\t\t\tif (!$.options.traceTap) return this;\r\n\t\t\tif (!msg) msg=\"\";\r\n\t\t\tvar t=this;\r\n\t\t\tvar res=Parser.create(function(s){\r\n\t\t\t\tconsole.log(\"tap:\"+msg+\" name:\"+t.name+\"  pos=\"+(s?s.pos:\"?\"));\r\n\t\t\t\tvar r=t.parse(s);\r\n\t\t\t\tvar img=r.src.str.substring(r.pos-3,r.pos)+\"^\"+r.src.str.substring(r.pos,r.pos+3);\r\n\t\t\t\tconsole.log(\"/tap:\"+msg+\" name:\"+t.name+\" pos=\"+(s?s.pos:\"?\")+\"->\"+(r?r.pos:\"?\")+\" \"+img+\" res=\"+(r?r.success:\"?\"));\r\n\t\t\t\treturn r;\r\n\t\t\t});\r\n\t\t\t/*if (this._first) {\r\n\t\t\t\tvar ntbl={},tbl=this._first.tbl;\r\n\t\t\t\tfor (var c in tbl) {\r\n\t\t\t\t\tntbl=tbl[c].\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\treturn res.setName(\"(Tap \"+t.name+\")\");\r\n\t\t},\r\n\t\tretN: function (i) {\r\n\t\t\treturn this.ret(function () {\r\n\t\t\t\treturn arguments[i];\r\n\t\t\t});\r\n\t\t},\r\n\t\tparseStr: function (str,global) {\r\n\t\t\tvar st=new State(str,global);\r\n\t\t\treturn this.parse(st);\r\n\t\t},\r\n\t\tcheckTbl: function () {\r\n\t\t\tif (!this._first) return this;\r\n\t\t\tvar tbl=this._first.tbl;\r\n\t\t\tfor (var k in tbl) {\r\n\t\t\t\tif (!tbl[k].parse) throw this.name+\": tbl.\"+k+\" is not a parser :\"+tbl[k];\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t});\r\n\tfunction State(strOrTokens, global) { // class State\r\n\t\tif (strOrTokens!=null) {\r\n\t\t\tthis.src={maxPos:0, global:global};// maxPos is shared by all state\r\n\t\t\tif (typeof strOrTokens==\"string\") {\r\n\t\t\t\tthis.src.str=strOrTokens;\r\n\t\t\t}\r\n\t\t\tif (strOrTokens instanceof Array) {\r\n\t\t\t\tthis.src.tokens=strOrTokens;\r\n\t\t\t}\r\n\t\t\tthis.pos=0;\r\n\t\t\tthis.result=[];\r\n\t\t\tthis.success=true;\r\n\t\t}\r\n\t}\r\n\textend(State.prototype, {\r\n\t\tclone: function() {\r\n\t\t\tvar s=new State();\r\n\t\t\ts.src=this.src;\r\n\t\t\ts.pos=this.pos;\r\n\t\t\ts.result=this.result.slice();\r\n\t\t\ts.success=this.success;\r\n\t\t\treturn s;\r\n\t\t},\r\n\t\tupdateMaxPos:function (npos) {\r\n\t\t\tif (npos > this.src.maxPos) {\r\n\t\t\t\tthis.src.maxPos=npos;\r\n\t\t\t}\r\n\t\t},\r\n\t\tisSuccess: function () {\r\n\t\t\treturn this.success;\r\n\t\t},\r\n\t\tgetGlobal: function () {\r\n\t\t\t\tif (!this.src.global) this.src.global={};\r\n\t\t\t\treturn this.src.global;\r\n\t\t}\r\n\t});\r\n\tParser.fromFirst=function (space, tbl) {\r\n\t\tif (space==\"TOKEN\") {\r\n\t\t\treturn Parser.fromFirstTokens(tbl);\r\n\t\t}\r\n\t\tvar res=Parser.create(function (s0) {\r\n\t\t\tvar s=space.parse(s0);\r\n\t\t\tvar f=s.src.str.substring(s.pos,s.pos+1);\r\n\t\t\tif ($.options.traceFirstTbl) {\r\n\t\t\t\tconsole.log(this.name+\": first=\"+f+\" tbl=\"+( tbl[f]?tbl[f].name:\"-\") );\r\n\t\t\t}\r\n\t\t\tif (tbl[f]) {\r\n\t\t\t\treturn tbl[f].parse(s);\r\n\t\t\t}\r\n\t\t\tif (tbl.ALL) return tbl.ALL.parse(s);\r\n\t\t\ts.success=false;\r\n\t\t\treturn s;\r\n\t\t});\r\n\t\tres._first={space:space,tbl:tbl};\r\n\t\tres.checkTbl();\r\n\t\treturn res;\r\n\t};\r\n\tParser.fromFirstTokens=function (tbl) {\r\n\t\tvar res=Parser.create(function (s) {\r\n\t\t\tvar t=s.src.tokens[s.pos];\r\n\t\t\tvar f=t?t.type:null;\r\n\t\t\tif ($.options.traceFirstTbl) {\r\n\t\t\t\tconsole.log(this.name+\": firstT=\"+f+\" tbl=\"+( tbl[f]?tbl[f].name:\"-\") );\r\n\t\t\t}\r\n\t\t\tif (f!=null && tbl[f]) {\r\n\t\t\t\treturn tbl[f].parse(s);\r\n\t\t\t}\r\n\t\t\tif (tbl.ALL) return tbl.ALL.parse(s);\r\n\t\t\ts.success=false;\r\n\t\t\treturn s;\r\n\t\t});\r\n\t\tres._first={space:\"TOKEN\",tbl:tbl};\r\n\t\tres.checkTbl();\r\n\t\treturn res;\r\n\t};\r\n\r\n\tvar StringParser={\r\n\t\tempty: Parser.create(function(state) {\r\n\t\t\tvar res=state.clone();\r\n\t\t\tres.success=true;\r\n\t\t\tres.result=[null]; //{length:0, isEmpty:true}];\r\n\t\t\treturn res;\r\n\t\t}).setName(\"E\"),\r\n\t\tfail: Parser.create(function(s){\r\n\t\t\ts.success=false;\r\n\t\t\treturn s;\r\n\t\t}).setName(\"F\"),\r\n\t\tstr: function (st) { // st:String\r\n\t\t\treturn this.strLike(function (str,pos) {\r\n\t\t\t\tif (str.substring(pos, pos+st.length)===st) return {len:st.length};\r\n\t\t\t\treturn null;\r\n\t\t\t}).setName(st);\r\n\t\t},\r\n\t\treg: function (r) {//r: regex (must have ^ at the head)\r\n\t\t\tif (!(r+\"\").match(/^\\/\\^/)) console.log(\"Waring regex should have ^ at the head:\"+(r+\"\"));\r\n\t\t\treturn this.strLike(function (str,pos) {\r\n\t\t\t\tvar res=r.exec( str.substring(pos) );\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\tres.len=res[0].length;\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}).setName(r+\"\");\r\n\t\t},\r\n\t\tstrLike: function (func) {\r\n\t\t\t// func :: str,pos, state? -> {len:int, other...}  (null for no match )\r\n\t\t\treturn Parser.create(function(state){\r\n\t\t\t\tvar str= state.src.str;\r\n\t\t\t\tif (str==null) throw \"strLike: str is null!\";\r\n\t\t\t\tvar spos=state.pos;\r\n\t\t\t\t//console.log(\" strlike: \"+str+\" pos:\"+spos);\r\n\t\t\t\tvar r1=func(str, spos, state);\r\n\t\t\t\tif ($.options.traceToken) console.log(\"pos=\"+spos+\" r=\"+r1);\r\n\t\t\t\tif(r1) {\r\n\t\t\t\t\tif ($.options.traceToken) console.log(\"str:succ\");\r\n\t\t\t\t\tr1.pos=spos;\r\n\t\t\t\t\tr1.src=state.src; // insert 2013/05/01\r\n\t\t\t\t\tr1.text=str.substring(r1.pos,r1.pos+r1.len);\r\n\t\t\t\t\tr1.toString=function () {return this.text; };\r\n\t\t\t\t\tvar ns=state.clone();\r\n\t\t\t\t\textend(ns, {pos:spos+r1.len, success:true, result:[r1]});\r\n\t\t\t\t\tstate.updateMaxPos(ns.pos);\r\n\t\t\t\t\treturn ns;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif ($.options.traceToken) console.log(\"str:fail\");\r\n\t\t\t\t\tstate.success=false;\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t}\r\n\t\t\t}).setName(\"STRLIKE\");\r\n\t\t},\r\n\t\tparse: function (parser, str,global) {\r\n\t\t\tvar st=new State(str,global);\r\n\t\t\treturn parser.parse(st);\r\n\t\t}\r\n\t};\r\n\t//  why not eof: ? because StringParser.strLike\r\n\tStringParser.eof=StringParser.strLike(function (str,pos) {\r\n\t\tif (pos==str.length) return {len:0};\r\n\t\treturn null;\r\n\t}).setName(\"EOF\");\r\n\t$.StringParser=StringParser;\r\n\tvar TokensParser={\r\n\t\ttoken: function (type) {\r\n\t\t\treturn Parser.create(function (s) {\r\n\t\t\t\tvar t=s.src.tokens[s.pos];\r\n\t\t\t\ts.success=false;\r\n\t\t\t\tif (!t) return s;\r\n\t\t\t\tif (t.type==type) {\r\n\t\t\t\t\ts=s.clone();\r\n\t\t\t\t\ts.updateMaxPos(s.pos);\r\n\t\t\t\ts.pos++;\r\n\t\t\t\t\ts.success=true;\r\n\t\t\t\t\ts.result=[t];\r\n\t\t\t\t}\r\n\t\t\t\treturn s;\r\n\t\t\t}).setName(type).firstTokens(type);\r\n\t\t},\r\n\t\tparse:function (parser, tokens, global) {\r\n\t\t\tvar st=new State(tokens,global);\r\n\t\t\treturn parser.parse(st);\r\n\t\t},\r\n\t\teof: Parser.create(function (s) {\r\n\t\t\tvar suc=(s.pos>=s.src.tokens.length);\r\n\t\t\ts.success=suc;\r\n\t\t\tif (suc) {\r\n\t\t\t\ts=s.clone();\r\n\t\t\t\ts.result=[{type:\"EOF\"}];\r\n\t\t\t}\r\n\t\t\treturn s;\r\n\t\t}).setName(\"EOT\")\r\n\t};\r\n\t$.TokensParser=TokensParser;\r\n\t$.lazy=function (pf) { //   ( ()->Parser ) ->Parser\r\n\t\tvar p=null;\r\n\t\treturn Parser.create(function (st) {\r\n\t\t\tif (!p) p=pf();\r\n\t\t\tif (!p) throw pf+\" returned null!\";\r\n\t\t\tthis.name=pf.name;\r\n\t\t\treturn p.parse(st);\r\n\t\t}).setName(\"LZ\");\r\n\t};\r\n\t$.addRange=function(res, newr) {\r\n\t\tif (newr==null) return res;\r\n\t\tif (typeof (res.pos)!=\"number\") {\r\n\t\t\tres.pos=newr.pos;\r\n\t\t\tres.len=newr.len;\r\n\t\t\treturn res;\r\n\t\t}\r\n\t\tvar newEnd=newr.pos+newr.len;\r\n\t\tvar curEnd=res.pos+res.len;\r\n\t\tif (newr.pos<res.pos) res.pos=newr.pos;\r\n\t\tif (newEnd>curEnd) res.len= newEnd-res.pos;\r\n\t\treturn res;\r\n\t};\r\n\t$.setRange=function (res) {\r\n\t\tif (res==null || typeof res==\"string\" || typeof res==\"number\" || typeof res==\"boolean\") return;\r\n\t\tvar exRange=$.getRange(res);\r\n\t\tif (exRange!=null) return res;\r\n\t\tfor (var i in res) {\r\n\t\t\tif (!res.hasOwnProperty(i)) continue;\r\n\t\t\tvar range=$.setRange(res[i]);\r\n\t\t\t$.addRange(res,range);\r\n\t\t}\r\n\t\treturn res;\r\n\t};\r\n\r\n\t$.getRange=function(e) {\r\n\t\tif (e==null) return null;\r\n\t\tif (typeof e.pos!=\"number\") return null;\r\n\t\tif (typeof e.len==\"number\") return e;\r\n\t\treturn null;\r\n\t};\r\n\treturn $;\r\n}();\r\n\n\n//# sourceURL=webpack://dncl2/./js/transpiler/parser.js?");

/***/ }),

/***/ "./runtime/js/lib.js":
/*!***************************!*\
  !*** ./runtime/js/lib.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass root {\r\n\tconsole_log = console.log;\r\n\tlogging_memory=(...args)=>{\r\n\t\tif(args[0]){\r\n\t\t\tconsole.log(window.performance.memory[args[0].toString()]);\r\n\t\t}else console.log(window.performance.memory);\r\n\t}\r\n\tlogging_performance=(...args)=>{\r\n\t\tif(args[0]){\r\n\t\t\tconsole.log(window.performance[args[0].toString()]);\r\n\t\t}else console.log(window.performance);\r\n\t}\r\n\t_killFlag=false;\r\n\t改行=\"\\n\"\r\n\tinput=([disp])=>{\r\n\t\treturn prompt(disp);\r\n\t}\r\n\t外部からの入力=this.input\r\n\t表示する=args=>{\r\n\t\tconst display = document.querySelector('#display');\r\n\t\tdisplay.innerHTML+=args.join('');\r\n\t\tdisplay.innerHTML+='\\n';\r\n\t\treturn;\r\n\t}\r\n\t改行なしで表示する=args=>{\r\n\t\tconst display = document.querySelector('#display');\r\n\t\tdisplay.innerHTML+=args.join('');\r\n\t\treturn;\r\n\t}\r\n\t改行無しで表示する=this.改行なしで表示する\r\n\t要素数=([ary])=> ary.length;\r\n\t入れ替える=(ary,a,b)=>{\r\n\t\tif(!Array.isArray(ary))return;\r\n\t\t[ary[a],ary[b]]=[ary[b],ary[a]]\r\n\t}\r\n\t追加する=([ary,item])=>{\r\n\t\tconsole.log(ary);\r\n\t\tif(!Array.isArray(ary))return;\r\n\t\tary.push(item);\r\n\t\treturn ary;\r\n\t}\r\n\tforinfo=[]\r\n\twhileinfo=[]\r\n\tifinfo=[]\r\n\tcallinfo={}\r\n\tiff=(id,cond)=>{\r\n\t\tthis['ifinfo'][id]||={judge:0,true:0,false:0};\r\n\t\tthis['ifinfo'][id]['judge']++;\r\n\t\tthis['ifinfo'][id][cond?'true':'false']++;\r\n\t\treturn cond;\r\n\t}\r\n\tcallf=async (name,args)=>{\r\n\t\t// console.log(this.callinfo[name]);\r\n\t\tthis['callinfo'][name]||={callCnt:0,info:[]};\r\n\t\tconst info = { args:[...args] };\r\n\t\tconst ret = await this[name](args);\r\n\t\tinfo.ret = ret;\r\n\t\tthis['callinfo'][name].info.push(info);\r\n\t\tthis['callinfo'][name].callCnt++;\r\n\t\treturn ret;\r\n\t}\r\n\t性能を確認する=()=>{\r\n\t\tconst info = [];\r\n\t\tinfo.push('==反復実行の実行情報==');\r\n\t\tfor(const [id,count] of Object.entries(this.forinfo)){\r\n\t\t\tinfo.push(`for${id}：${count}回`);\r\n\t\t}\r\n\t\tfor(const [id,count] of Object.entries(this.whileinfo)){\r\n\t\t\tinfo.push(`while${id}：${count}回`);\r\n\t\t}\r\n\t\tinfo.push('\\n==条件分岐の実行情報==');\r\n\t\tfor(const [id,{judge,'true':t,'false':f}] of Object.entries(this.ifinfo)){\r\n\t\t\tinfo.push(`if${id}：実行${judge}回、真${t}回、偽${f}回`)\r\n\t\t}\r\n\t\tinfo.push('\\n==関数の実行情報==');\r\n\t\tconsole.log(this.callinfo);\r\n\t\tfor(const [name,{callCnt:count}] of Object.entries(this.callinfo)){\r\n\t\t\tinfo.push(`「${name}」：${count}回`);\r\n\t\t}\r\n\t\tthis['表示する']([info.join('<br>')]);\r\n\t}\r\n\t// forward = dist => {\r\n\t//   root.kameta ||= root.turtle.create();\r\n\t//   root.kameta.forward(dist);\r\n\t// }\r\n\t// turnLeft = dir => {\r\n\t//   root.kameta ||= root.turtle.create();\r\n\t//   root.kameta.turnLeft(dir);\r\n\t// }\r\n\t// turnRight = dir => {\r\n\t//   root.kameta ||= root.turtle.create();\r\n\t//   root.kameta.turnRight(dir);\r\n\t// }\r\n\t// center = ()=>{\r\n\t//   root.kameta ||= root.turtle.create();\r\n\t//   root.kameta.moveToCenter();\r\n\t// }\r\n\trandom = ([n]) => n?Math.ceil(Math.random()*n):Math.random();\r\n\t乱数 = this.random\r\n\tary_ref = (_this,ary,refer)=>{\r\n\t\tif(typeof _this[ary]=='undefined')_this[ary]=[];\r\n\t\tconst refs = refer.split(',').map(e=>parseInt(e)||e).map(e=>typeof e=='number'?e-1:e);\r\n\t\tlet target=_this[ary];\r\n\t\twhile(refs.length>1){\r\n\t\t\tconst ref = refs.shift();\r\n\t\t\tif(typeof target[ref]=='undefined')target[ref]=[];\r\n\t\t\tif(Array.isArray(target[ref])){\r\n\t\t\t\ttarget = target[ref];\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthrow new Error(`${ary}[${refer}]は配列の要素ではありません。`);\r\n\t\t}\r\n\t\tconst last = refs.shift();\r\n\t\tif(typeof target[last]=='undefined')target[last] = this.initial_dict[ary] || undefined;\r\n\t\treturn target[last];\r\n\t}\r\n\tinitial_dict = {};\r\n\tinitial_set = (ary,value)=>{\r\n\t\tary = ary||[];\r\n\t\tthis.initial_dict[ary] = value;\r\n\t}\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new root());\r\n\n\n//# sourceURL=webpack://dncl2/./runtime/js/lib.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./js/minimal.js");
/******/ 	
/******/ })()
;