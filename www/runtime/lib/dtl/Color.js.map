{"version":3,"sources":["/home/0123/dolittle/Turtle/Color.dtl"],"names":[],"mappings":"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","sourcesContent":["// Dolittle\nColor=root!create.\nColor:r=0.\nColor:g=0.\nColor:b=0.\nColor:initialize=[|arg1 arg2 arg3;args r g b|\n    args=arguments.\n    [(arg1!toString)!(:window!\"^#[0-9A-F]{6}$\"RegExp)match]!then[|;s|\n        s=arg1!toString \"\"split.\n        s!shift.\n        r=:window!((s!shift)+(s!shift)) 16 parseInt.\n        g=:window!((s!shift)+(s!shift)) 16 parseInt.\n        b=:window!((s!shift)+(s!shift)) 16 parseInt.\n    ]else[and!(args:length==1)((!(arg1)typeof)==\"number\")true]then[\n        b=arg1%0x100.\n        arg1=:window!(arg1/0x100)parseInt.\n        g=arg1%0x100.\n        arg1=:window!(arg1/0x100)parseInt.\n        r=arg1%0x100.\n        arg1=:window!(arg1/0x100)parseInt.\n    ]else[\n        arg1=:window:Math! (arg1) floor. \n        arg2=:window:Math! (arg2) floor. \n        arg3=:window:Math! (arg3) floor. \n        [arg1>255]!then[r=255]else[arg1<0]then[r=0]else[r=arg1]execute.\n        [arg2>255]!then[g=255]else[arg2<0]then[g=0]else[g=arg2]execute.\n        [arg3>255]!then[b=255]else[arg3<0]then[b=0]else[b=arg3]execute.\n    ]execute.\n    self:r=r.\n    self:g=g.\n    self:b=b.\n].\nColor:randomCreate=[Color!(random(255))(random(255))(random(255))create].\nColor:darken=[Color!(self:r-50) (self:g-50) (self:b-50) create].\nColor:brighten=[Color!(self:r+50) (self:g+50) (self:b+50) create].\nColor:toString=[\n    \"rgb(\"+self:r+\",\"+self:g+\",\"+self:b+\")\"\n].\nColor:setCMYK=[\n    black = (window:Math)! (1 - r / 255) (1 - g / 255) (1 - b / 255) min.\n    cyan = (1 - (r / 255) - black) / (1 - black).\n    magenta = (1 - (g / 255) - black) / (1 - black).\n    yellow = (1 - (b / 255) - black) / (1 - black).\n    this.\n].\nColor:fromCMYK=[|cyan magenta yellow black|\n    Color!\n    ((1 - ((window:Math) ! 1  (cyan * (1 - black) + black) min)) * 255)\n    ((1 - ((window:Math) ! 1  (magenta * (1 - black) + black) min)) * 255)\n    ((1 - ((window:Math) ! 1  (yellow * (1 - black) + black) min)) * 255)\n    create.\n].\nColor:getRed=[r].\nColor:getGreen=[g].\nColor:getBlue=[b].\nColor:mixParam=1.1.\nLight=! create.\nLight:mix=[|;c|\n    args=(Array:prototype:slice) ! (arguments) call.\n    args=args ! [|e|\n        (:is) ! (e) (Color) call.\n    ] select.\n    c=args ! shift.\n    [(args:length)==0] ! then [\n        c\n    ] else [    \n        (c:mixColor) ! (c) (args) apply\n    ] execute\n].\n/*Light:mix=[|;r g b l|\n    r=0.g=0.b=0.\n    (Array:prototype:slice) ! (arguments) call [|e|\n        r=r+(e:r).\n        g=g+(e:g).\n        b=b+(e:b).\n    ] each.\n    l=arguments:length.\n    Color ! \n    (window:Math ! (r/l*Color:mixParam) 255 min) \n    (window:Math ! (g/l*Color:mixParam) 255 min)\n    (window:Math ! (b/l*Color:mixParam) 255 min) create.\n].*/\n\nInk=! create.\nInk:mix=[|;c|\n    args=(Array:prototype:slice) ! (arguments) call.\n    args=args ! [|e|\n        (:is) ! (e) (Color) call.\n    ] select.\n    c=args ! shift.\n    [(args:length)==0] ! then [\n        c\n    ] else [    \n        (c:mixColor2) ! (c) (args) apply\n    ] execute\n].\n/*Ink:mix=[|;c m y k l|\n    c=0.m=0.y=0.k=0.\n    (Array:prototype:slice) ! (arguments) call [|e|\n        e! setCMYK.\n        c=c+(e:cyan).\n        m=m+(e:magenta).\n        y=y+(e:yellow).\n        k=k+(e:black).\n    ] each.\n    l=arguments:length.\n    Color ! \n    (window:Math ! (c/l*Color:mixParam) 1 min) \n    (window:Math ! (m/l*Color:mixParam) 1 min)\n    (window:Math ! (y/l*Color:mixParam) 1 min)\n    (window:Math ! (k/l*Color:mixParam) 1 min) fromCMYK.\n].*/\nColor:mixColor=[|;args red green blue yyy m|\n    args=(Array:prototype:slice) ! (arguments) call.\n    args=args ! [|e|\n        (:is) ! (e) (Color) call.\n    ] select.\n    red = ! getRed. green = ! getGreen. blue = ! getBlue.\n    yyy = ! (red) (green) (blue) max.\n    args ! [|arg; r g b y|\n        r=arg ! getRed.\n        g=arg ! getGreen.\n        b=arg ! getBlue.\n        y=! (r) (g) (b) max.\n        red = red+r. green = green+g. blue = blue+b. yyy = yyy+y.\n    ] each.\n    \n    m = yyy / (! (red) (green) (blue) max) / ((args:length)+1).\n    Color ! (red*m) (green*m) (blue*m) create.\n].\nColor:max=[|r g b;m|\n    m = r.\n    [m < g] ! then [m = g] execute.\n    [m < b] ! then [m = b] execute.\n    m\n].\nColor:mixColor2=[|;args red green blue yyy m|\n    args=(Array:prototype:slice) ! (arguments) call.\n    args=args ! [|e|\n        (:is) ! (e) (Color) call.\n    ] select.\n    red = 255-(! getRed). green = 255-(! getGreen). blue = 255-(! getBlue).\n    yyy = ! (red) (green) (blue) max.\n    args ! [|arg; r g b y|\n        r=255-(arg ! getRed).\n        g=255-(arg ! getGreen).\n        b=255-(arg ! getBlue).\n        y=! (r) (g) (b) max.\n        red = red+r. green = green+g. blue = blue+b. yyy = yyy+y.\n    ] each.\n    m = yyy / (! (red) (green) (blue) max) / ((args:length)+1).\n    Color ! (255-red*m) (255-green*m) (255-blue*m) create.\n].\n\nblack=Color!0 0 0 create.\nwhite=Color!255 255 255 create.\nblue=Color!8 8 255 create.\nred=Color!255 8 8 create.\ngreen=Color!8 255 8 create.\npink=Color!255 0 255 create.\nmagenta=Color!255 0 255 create.\ncyan=Color!0 255 255 create.\nyellow=Color!255 255 0 create.\n\n"]}