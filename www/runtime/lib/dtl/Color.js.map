{"version":3,"sources":["/Tonyu/Projects/Turtle/Color.dtl"],"names":[],"mappings":"aACC,cAAM;CACN,aAAM,MAFN;CAGA,aAAM,MAHN;CAIA,aAAM,MAJN;CAKA,aAAM,eALL,sBAKkB,KAAK,KAAK;;;;;;CAL5B,AAMG,KANH,AAMQ;CANP;;SAAD,AAOK,8BAAiB;sBAPrB;;;CAAA,AAQM,EARP,AAQS;CARR,AASM;CATP,AAUO,EAAG,8BAVT,AAUkB,eAVlB,AAU4B,gBAT1B;CADH,AAWO,EAAG,8BAXT,AAWkB,eAXlB,AAW4B,gBAV1B;QADH,AAYO,EAAG,8BAZT,AAYkB,eAZlB,AAY4B,gBAX1B;aADF;;QAaS,sBAbV,AAae,IAAK,aAbpB,yBAAA,AAakC;aAbjC;;CAAD,AAcO,GAdP,AAcS,KAJJ;CAVL,AAeO,KAAM,6BAfb,AAeqB,KALhB;CAVL,AAgBO,GAhBP,AAgBS,KANJ;CAVL,AAiBO,KAAM,6BAjBb,AAiBqB,KAPhB;CAVL,AAkBO,GAlBP,AAkBS,KARJ;QAVL,AAmBO,KAAM,6BAnBb,AAmBqB,KAThB;gBAVJ;;CAAC;;SAAF,AAqBQ,KAXJ;sBAVF;;QAAF,AAqBuB,EAXnB;aAVF;;SAAF,AAqBkC,KArBnC;aAAG;;QAAF,AAqB8C,EArB/C;gBAAG;;QAAF,AAqBuD,EArBvD,AAqByD;;CArBvD;;SAAF,AAsBQ,KAZJ;sBAVF;;QAAF,AAsBuB,EAZnB;aAVF;;SAAF,AAsBkC,KAtBnC;aAAG;;QAAF,AAsB8C,EAtB/C;gBAAG;;QAAF,AAsBuD,EAtBvD,AAsByD;;QAtBvD;;SAAF,AAuBQ,KAbJ;sBAVF;;QAAF,AAuBuB,EAbnB;aAVF;;SAAF,AAuBkC,KAvBnC;aAAG;;QAAF,AAuB8C,EAvB/C;gBAAG;;QAAF,AAuBuD,EAvBvD,AAuByD;;;CAvBzD,AAyBG,IAAK,MAzBR,AAyBU;CAzBV,AA0BG,IAAK,MA1BR,AA0BU;QA1BV,AA2BG,IAAK,MA3BR,AA2BU;;CAEX,aAAM,iBA7BL;;QA6BmB,0BAnBf,OAmBsB,YAnBtB,OAmBmC,YAnBnC,OAmBgD;;CACrD,aAAM,WA9BL;;QA8Ba,0BA9Bb,AA8BoB,IAAK,MA3BlB,SAHP,AA8BgC,IAAK,MA3B9B,SAHP,AA8B4C,IAAK,MA3B1C;;CA4BR,aAAM,aA/BL;;QA+Be,0BA/Bf,AA+BsB,IAAK,MA5BpB,SAHP,AA+BkC,IAAK,MA5BhC,SAHP,AA+B8C,IAAK,MA5B5C;;CA6BR,aAAM,aAhCL;;qBAAA,AAiCU,IAAK,YAjCf,AAiCqB,IAAK,YAjC1B,AAiCgC,IAAK;;CAGtC,cAAM,wBApCN,IAAA,IAAA;CAqCA,cAAM,wBA3BD,MAAA,MAAA;CA4BL,aAAK,wBAtCG,IAAA,IAUH;CA6BL,YAAI,wBA7BC,MAVG,IAAA;CAwCR,cAAM,wBAxCE,IAUH,MAVG;CAyCR,aAAK,wBA/BA,MAVL,IAUK;CAgCL,gBAAQ,wBAhCH,MAVL,IAUK;CAiCL,aAAK,wBA3CL,IAUK,MAAA;QAkCL,eAAO,wBAlCF,MAAA,MAVL","sourcesContent":["// Dolittle\nColor=root!create.\nColor:r=0.\nColor:g=0.\nColor:b=0.\nColor:initialize=[|arg1 arg2 arg3;args r g b|\n    args=arguments.\n    [(arg1!toString)!(:window!\"^#[0-9A-F]{6}$\"RegExp)match]!then[|;s|\n        s=arg1!toString \"\"split.\n        s!shift.\n        r=:window!((s!shift)+(s!shift)) 16 parseInt.\n        g=:window!((s!shift)+(s!shift)) 16 parseInt.\n        b=:window!((s!shift)+(s!shift)) 16 parseInt.\n    ]else[:and!(args:length==1)((!(arg1)typeof)==\"number\")true]then[\n        b=arg1%0x100.\n        arg1=:window!(arg1/0x100)parseInt.\n        g=arg1%0x100.\n        arg1=:window!(arg1/0x100)parseInt.\n        r=arg1%0x100.\n        arg1=:window!(arg1/0x100)parseInt.\n    ]else[\n        [arg1>255]!then[r=255]else[arg1<0]then[r=0]else[r=arg1]execute.\n        [arg2>255]!then[g=255]else[arg2<0]then[g=0]else[g=arg2]execute.\n        [arg3>255]!then[b=255]else[arg3<0]then[b=0]else[b=arg3]execute.\n    ]execute.\n    self:r=r.\n    self:g=g.\n    self:b=b.\n].\nColor:randomCreate=[Color!(random(255))(random(255))(random(255))create].\nColor:darken=[Color!(self:r-50) (self:g-50) (self:b-50) create].\nColor:brighten=[Color!(self:r+50) (self:g+50) (self:b+50) create].\nColor:toString=[\n    \"rgb(\"+self:r+\",\"+self:g+\",\"+self:b+\")\"\n].\n\nblack=Color!0 0 0 create.\nwhite=Color!255 255 255 create.\nblue=Color!8 8 255 create.\nred=Color!255 8 8 create.\ngreen=Color!8 255 8 create.\npink=Color!255 0 255 create.\nmagenta=Color!255 0 255 create.\ncyan=Color!0 255 255 create.\nyellow=Color!255 255 0 create.\n"]}