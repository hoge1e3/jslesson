{"version":3,"sources":["/home/devel/devel/Turtle/Color.dtl"],"names":[],"mappings":"4BAEC,cAAM,YAAK;CACX,aAAM,MAHN;CAIA,aAAM,MAJN;CAKA,aAAM,MALN;CAMA,aAAM,MANL;CAOD,aAAM,eAPL,sBAOkB,KAAK,KAAK;;;;;;CAP5B,AAQG,KARH;CAAC;;SAAD,AASK,IAAK,eAA0C,WAA9B,cAAuB;GAAc,UAMvD,SAfH;;;CAAA,AAUM,EAVP,AAUS,IAAK,cAAW;CAVxB,AAWM,CAAE;CAXT,AAYO,EAAG,cAAgC,gBAZzC,AAYkB,CAAE,cAZpB,AAY4B,CAAE,eAX/B;CADA,AAaO,EAAG,cAAgC,gBAbzC,AAakB,CAAE,cAbpB,AAa4B,CAAE,eAZ/B;QADA,AAcO,EAAG,cAAgC,gBAdzC,AAckB,CAAE,cAdpB,AAc4B,CAAE,eAb/B;IAc6D,SAf5D;;QAeQ,WAA+C,WAfxD,AAec,IAAK,aAfnB,aAesC,YAftC,AAeiC;IAO7B,SAtBH;;CAAD,AAgBO,GAhBP,AAgBS,KANW;CAVpB,AAiBO,KAAM,cAAmB,eAjBhC,AAiBqB,KAPD;CAVpB,AAkBO,GAlBP,AAkBS,KARW;CAVpB,AAmBO,KAAM,cAAmB,eAnBhC,AAmBqB,KATD;CAVpB,AAoBO,GApBP,AAoBS,KAVW;QAVpB,AAqBO,KAAM,cAAmB,eArBhC,AAqBqB,KAXD;IAmBhB,YA7BH;;CAAD,AAuBO,KAAM,cAAO,QAAa,WAvBjC,AAuB2B;CAvB3B,AAwBO,KAAM,cAAO,QAAa,WAxBjC,AAwB2B;CAxB3B,AAyBO,KAAM,cAAO,QAAa,WAzBjC,AAyB2B;CAzBzB;;SAAF,AA0BQ,KAhBW;GAgBD,UAAW,SA1B3B;;QAAF,AA0BuB,EAhBJ;IAgBsB,SA1BvC;;SAAF,AA0BkC,KA1BnC;IA0BmD,SA1BhD;;QAAF,AA0B8C,EA1B/C;IA0B+D,YA1B5D;;QAAF,AA0BuD,EA1BvD,AA0ByD;;CA1BvD;;SAAF,AA2BQ,KAjBW;GAiBD,UAAW,SA3B3B;;QAAF,AA2BuB,EAjBJ;IAiBsB,SA3BvC;;SAAF,AA2BkC,KA3BnC;IA2BmD,SA3BhD;;QAAF,AA2B8C,EA3B/C;IA2B+D,YA3B5D;;QAAF,AA2BuD,EA3BvD,AA2ByD;;QA3BvD;;SAAF,AA4BQ,KAlBW;GAkBD,UAAW,SA5B3B;;QAAF,AA4BuB,EAlBJ;IAkBsB,SA5BvC;;SAAF,AA4BkC,KA5BnC;IA4BmD,SA5BhD;;QAAF,AA4B8C,EA5B/C;IA4B+D,YA5B5D;;QAAF,AA4BuD,EA5BvD,AA4ByD;;;CA5BzD,IA8BQ,MA9BR,AA8BU;CA9BV,IA+BQ,MA/BR,AA+BU;CA/BV,IAgCQ,MAhCR,AAgCU;QAhCV,IAiCQ,MAjCR;;CAmCD,aAAM,iBAnCL;;QAmCmB,aAA6C,aAzB7C,OAyBO,YAzBP,OAyBoB,YAzBpB,OAyBiC;;CACrD,aAAM,WApCL;;QAoCa,aAA0C,aApCvD,IAoCyB,MAjCxB,SAHD,IAoCqC,MAjCpC,SAHD,IAoCiD,MAjChD;;CAkCF,aAA0B;CAC1B,aAAM,aAtCL;;QAsCe,aAA0C,aAtCzD,IAsC2B,MAnC1B,SAHD,IAsCuC,MAnCtC,SAHD,IAsCmD,MAnClD;;CAoCF,aAA8B;CAC9B,aAAM,aAxCL;;wBAAA,IAyCgB,YAzChB,IAyC2B,YAzC3B,IAyCsC,YAzCtC,IAyCiD;;CAElD,aAAM,kBA3CL;;CAAA,IA2CyB,MA3CzB;QAAA;;CA4CD,aAA0C;CAC1C,aAAM,kBA7CL;;CAAA,IA6CyB,MA7CzB;QAAA;;CA8CD,aAAM,YA9CL;;CA+CG,eAAS,cAAO,SAAiD,UA/CpE,KA+C+B,UArCZ,WAVnB,KA+C6C,UArC1B,WAVnB,KA+C2D,UArCxC;CAsChB,iBAhDH,MAgDgB,UAtCG,SAsCQ,kBAhD3B,IAgDyC;CACtC,oBAjDH,MAiDmB,UAvCA,SAuCW,kBAjD9B,IAiD4C;CACzC,mBAlDH,MAkDkB,UAxCC,SAwCU,kBAlD7B,IAkD2C;QAlD3C;;CAqDD,aAAM,aArDL,sBAqDgB,KAAK,QAAQ,OAAO;;QACjC,aAIA,eA1DH,MAuDW,cAAO,SAAwC,QAvD1D,OAAA,AAuD8B,OAvD9B,IAAA,AAuD0C,SAvD1C,AAuDmD,YA7ChC,YAVnB,MAwDW,cAAO,SAA2C,QAxD7D,OAAA,AAwD8B,UAxD9B,IAAA,AAwD6C,SAxD7C,AAwDsD,YA9CnC,YAVnB,MAyDW,cAAO,SAA0C,QAzD5D,OAAA,AAyD8B,SAzD9B,IAAA,AAyD4C,SAzD5C,AAyDqD,YA/ClC;;CAkDpB,aAAM,WA5DL;;QA4Da;;CACd,aAAM,aA7DL;;QA6De;;CAChB,aAAM,YA9DL;;QA8Dc;;CACf,aAAM,aA/DJ;CAiED,kBAAQ;CACR,aAAM,QAlEL;;;CAmEG,cAAM,aAAM,aAAU,UAAqB,UAnE9C;CAoEG,aAAK,YAEH,WAtEJ,sBAoEgB;;SACR,WAAkB,UArE1B,AAqEe,IAAI;;CArEpB,AAuEG,EAAE,YAAO;QAvEX;;UAwEI,YAAK,cAxEX;GAwEyB,UAEnB,SA1EJ;;QAAD,AAyEO;IAGF,YA5EJ;;SAAD,AA2EQ,CAAE,aAAuB,WA3EjC,AA2EuB,IAAI;;;CAiB5B,gBAAM;CACN,WAAI,QA7FH;;;CA8FG,cAAM,aAAM,aAAU,UAAqB,UA9F9C;CA+FG,aAAK,YAEH,WAjGJ,sBA+FgB;;SACR,WAAkB,UAhG1B,AAgGe,IAAI;;CAhGpB,AAkGG,EAAE,YAAO;QAlGX;;UAmGI,YAAK,cAnGX;GAmGyB,UAEnB,SArGJ;;QAAD,AAoGO;IAGF,YAvGJ;;SAAD,AAsGQ,CAAE,cAAwB,WAtGlC,AAsGwB,IAAI;;;CAmB7B,aAAM,aAzHL;;;;;;;;CAAA,AA0HG,MAAM,aAAM,aAAU,UAAqB,UA1H9C;CAAA,AA2HG,KA3HH,AA2HQ,IAEH,WA7HJ,sBA2HgB;;SACR,WAAkB,UA5H1B,AA4He,IAAI;;CA5HpB,AA8HG,QAAQ;CA9HX,AA8HmB,UAAU;CA9H7B,AA8HuC,SAAS;CA9HhD,AA+HG,QAA6B,SA/HhC,AA+HY,MA/HZ,AA+HkB,QA/HlB,AA+H0B;CA/H1B,AAgIG,IAME,SAtIJ,sBAgIW;;;;;;CAhIX,AAiIM,EAjIN,AAiIQ,GAAM;CAjId,AAkIM,EAlIN,AAkIQ,GAAM;CAlId,AAmIM,EAnIN,AAmIQ,GAAM;CAnId,AAoIM,MAAgB,SApItB,AAoIW,IApIX,AAoIe,IApIf,AAoImB;CApIpB,AAqIO,KArIP,AAqIa,IArIZ,AAqIgB;CArIjB,AAqIoB,OArIpB,AAqI4B,MArI3B,AAqIiC;CArIlC,AAqIqC,MArIrC,AAqI4C,KArI3C,AAqIgD;QArIjD,AAqIoD,KArIpD,AAqI0D,IArIzD,AAqI6D;;CArI9D,AAwIG,IAxIH,AAwIO,SAA8B,SAxIrC,AAwIiB,MAxIjB,AAwIuB,QAxIvB,AAwI+B,YAxI/B,AAwI8C,IAAK,YAxInD;QAyIG,aAAmC,aAzItC,AAyIY,IAzIZ,AAyIgB,MAzIhB,AAyIoB,MAzIpB,AAyI0B,MAzI1B,AAyI8B,KAzI9B,AAyImC;;CAEpC,aAAM,QA3IL,sBA2IW,EAAE,EAAE;;;CA3If,AA4IG,EA5IH,AA4IO;CA5IN;;SAAD,AA6II,EA7IJ,AA6IQ;GAAK,UAAa,YA7IzB;;QAAD,AA6ImB,EA7InB,AA6IuB;;CA7ItB;;SAAD,AA8II,EA9IJ,AA8IQ;GAAK,UAAa,YA9IzB;;QAAD,AA8ImB,EA9InB,AA8IuB;;QA9IvB,AA+IG;;CAEJ,aAAM,cAjJL;;;;;;;;CAAA,AAkJG,MAAM,aAAM,aAAU,UAAqB,UAlJ9C;CAAA,AAmJG,KAnJH,AAmJQ,IAEH,WArJJ,sBAmJgB;;SACR,WAAkB,UApJ1B,AAoJe,IAAI;;CApJpB,AAsJG,KA5IgB,WA4IH;CAtJhB,AAsJyB,OA5IN,WA4IqB;CAtJxC,AAsJmD,MA5IhC,WA4I8C;CAtJjE,AAuJG,QAA6B,SAvJhC,AAuJY,MAvJZ,AAuJkB,QAvJlB,AAuJ0B;CAvJ1B,AAwJG,IAME,SA9JJ,sBAwJW;;;;;;CAxJX,AAyJM,GA/IY,OAVlB,AAyJa,GAAM;CAzJnB,AA0JM,GAhJY,OAVlB,AA0Ja,GAAM;CA1JnB,AA2JM,GAjJY,OAVlB,AA2Ja,GAAM;CA3JnB,AA4JM,MAAgB,SA5JtB,AA4JW,IA5JX,AA4Je,IA5Jf,AA4JmB;CA5JpB,AA6JO,KA7JP,AA6Ja,IA7JZ,AA6JgB;CA7JjB,AA6JoB,OA7JpB,AA6J4B,MA7J3B,AA6JiC;CA7JlC,AA6JqC,MA7JrC,AA6J4C,KA7J3C,AA6JgD;QA7JjD,AA6JoD,KA7JpD,AA6J0D,IA7JzD,AA6J6D;;CA7J9D,AA+JG,IA/JH,AA+JO,SAA8B,SA/JrC,AA+JiB,MA/JjB,AA+JuB,QA/JvB,AA+J+B,YA/J/B,AA+J8C,IAAK,YA/JnD;QAgKG,aAA+C,aAtJ/B,OAVnB,AAgKgB,IAhKhB,AAgKoB,OAtJD,OAVnB,AAgK4B,MAhK5B,AAgKkC,OAtJf,OAVnB,AAgK0C,KAhK1C,AAgK+C;;CAGhD,cAAM,aAAY,WAnKlB,IAAA,IAAA;CAoKA,cAAM,aAAkB,WA1JJ,MAAA,MAAA;CA2JpB,aAAK,aAAc,WArKX,IAAA,IAUY;CA4JpB,YAAI,aAAc,WA5JE,MAVZ,IAAA;CAuKR,cAAM,aAAc,WAvKZ,IAUY,MAVZ;CAwKR,aAAK,aAAgB,WA9JD,MAVpB,IAUoB;CA+JpB,gBAAQ,aAAgB,WA/JJ,MAVpB,IAUoB;CAgKpB,aAAK,aAAgB,WA1KrB,IAUoB,MAAA;QAiKpB,eAAO,aAAgB,WAjKH,MAAA,MAVpB","sourcesContent":["//NOGENERATOR\r\n// Dolittle\r\nColor=root!create.\r\nColor:r=0.\r\nColor:g=0.\r\nColor:b=0.\r\nColor:a=1.\r\nColor:initialize=[|arg1 arg2 arg3;args r g b|\r\n    args=arguments.\r\n    [(arg1!toString)!(:window!\"^#[0-9A-F]{6}$\"RegExp)match]!then[|;s|\r\n        s=arg1!toString \"\"split.\r\n        s!shift.\r\n        r=:window!((s!shift)+(s!shift)) 16 parseInt.\r\n        g=:window!((s!shift)+(s!shift)) 16 parseInt.\r\n        b=:window!((s!shift)+(s!shift)) 16 parseInt.\r\n    ]else[and!(args:length==1)((!(arg1)typeof)==\"number\")true]then[\r\n        b=arg1%0x100.\r\n        arg1=:window!(arg1/0x100)parseInt.\r\n        g=arg1%0x100.\r\n        arg1=:window!(arg1/0x100)parseInt.\r\n        r=arg1%0x100.\r\n        arg1=:window!(arg1/0x100)parseInt.\r\n    ]else[\r\n        arg1=:window:Math! (arg1) floor. \r\n        arg2=:window:Math! (arg2) floor. \r\n        arg3=:window:Math! (arg3) floor. \r\n        [arg1>255]!then[r=255]else[arg1<0]then[r=0]else[r=arg1]execute.\r\n        [arg2>255]!then[g=255]else[arg2<0]then[g=0]else[g=arg2]execute.\r\n        [arg3>255]!then[b=255]else[arg3<0]then[b=0]else[b=arg3]execute.\r\n    ]execute.\r\n    self:r=r.\r\n    self:g=g.\r\n    self:b=b.\r\n    self:a=1.\r\n].\r\nColor:randomCreate=[Color!(random(255))(random(255))(random(255))create].\r\nColor:darken=[Color!(self:r-50) (self:g-50) (self:b-50) create].\r\nColor ! \"darken\" \"darker\" addAlias.\r\nColor:brighten=[Color!(self:r+50) (self:g+50) (self:b+50) create].\r\nColor ! \"brighten\" \"brighter\" addAlias.\r\nColor:toString=[\r\n    \"rgba(\"+self:r+\",\"+self:g+\",\"+self:b+\",\"+self:a+\")\"\r\n].\r\nColor:toHalfOpacity=[self:a=0.5.self].\r\nColor ! \"toHalfOpacity\" \"setTransparency\" addAlias.\r\nColor:toFullOpacity=[self:a=1.self].\r\nColor:setCMYK=[\r\n    black = (window:Math)! (1 - r / 255) (1 - g / 255) (1 - b / 255) min.\r\n    cyan = (1 - (r / 255) - black) / (1 - black).\r\n    magenta = (1 - (g / 255) - black) / (1 - black).\r\n    yellow = (1 - (b / 255) - black) / (1 - black).\r\n    this.\r\n].\r\nColor:fromCMYK=[|cyan magenta yellow black|\r\n    Color!\r\n    ((1 - ((window:Math) ! 1  (cyan * (1 - black) + black) min)) * 255)\r\n    ((1 - ((window:Math) ! 1  (magenta * (1 - black) + black) min)) * 255)\r\n    ((1 - ((window:Math) ! 1  (yellow * (1 - black) + black) min)) * 255)\r\n    create.\r\n].\r\nColor:getRed=[r].\r\nColor:getGreen=[g].\r\nColor:getBlue=[b].\r\nColor:mixParam=1.1.\r\n\r\nLight=! create.\r\nLight:mix=[|;c|\r\n    args=(Array:prototype:slice) ! (arguments) call.\r\n    args=args ! [|e|\r\n        (:is) ! (e) (Color) call.\r\n    ] select.\r\n    c=args ! shift.\r\n    [(args:length)==0] ! then [\r\n        c\r\n    ] else [    \r\n        (c:mixColor) ! (c) (args) apply\r\n    ] execute\r\n].\r\n/*Light:mix=[|;r g b l|\r\n    r=0.g=0.b=0.\r\n    (Array:prototype:slice) ! (arguments) call [|e|\r\n        r=r+(e:r).\r\n        g=g+(e:g).\r\n        b=b+(e:b).\r\n    ] each.\r\n    l=arguments:length.\r\n    Color ! \r\n    (window:Math ! (r/l*Color:mixParam) 255 min) \r\n    (window:Math ! (g/l*Color:mixParam) 255 min)\r\n    (window:Math ! (b/l*Color:mixParam) 255 min) create.\r\n].*/\r\n\r\nInk=! create.\r\nInk:mix=[|;c|\r\n    args=(Array:prototype:slice) ! (arguments) call.\r\n    args=args ! [|e|\r\n        (:is) ! (e) (Color) call.\r\n    ] select.\r\n    c=args ! shift.\r\n    [(args:length)==0] ! then [\r\n        c\r\n    ] else [    \r\n        (c:mixColor2) ! (c) (args) apply\r\n    ] execute\r\n].\r\n/*Ink:mix=[|;c m y k l|\r\n    c=0.m=0.y=0.k=0.\r\n    (Array:prototype:slice) ! (arguments) call [|e|\r\n        e! setCMYK.\r\n        c=c+(e:cyan).\r\n        m=m+(e:magenta).\r\n        y=y+(e:yellow).\r\n        k=k+(e:black).\r\n    ] each.\r\n    l=arguments:length.\r\n    Color ! \r\n    (window:Math ! (c/l*Color:mixParam) 1 min) \r\n    (window:Math ! (m/l*Color:mixParam) 1 min)\r\n    (window:Math ! (y/l*Color:mixParam) 1 min)\r\n    (window:Math ! (k/l*Color:mixParam) 1 min) fromCMYK.\r\n].*/\r\nColor:mixColor=[|;args red green blue yyy m|\r\n    args=(Array:prototype:slice) ! (arguments) call.\r\n    args=args ! [|e|\r\n        (:is) ! (e) (Color) call.\r\n    ] select.\r\n    red = ! getRed. green = ! getGreen. blue = ! getBlue.\r\n    yyy = ! (red) (green) (blue) max.\r\n    args ! [|arg; r g b y|\r\n        r=arg ! getRed.\r\n        g=arg ! getGreen.\r\n        b=arg ! getBlue.\r\n        y=! (r) (g) (b) max.\r\n        red = red+r. green = green+g. blue = blue+b. yyy = yyy+y.\r\n    ] each.\r\n    \r\n    m = yyy / (! (red) (green) (blue) max) / ((args:length)+1).\r\n    Color ! (red*m) (green*m) (blue*m) create.\r\n].\r\nColor:max=[|r g b;m|\r\n    m = r.\r\n    [m < g] ! then [m = g] execute.\r\n    [m < b] ! then [m = b] execute.\r\n    m\r\n].\r\nColor:mixColor2=[|;args red green blue yyy m|\r\n    args=(Array:prototype:slice) ! (arguments) call.\r\n    args=args ! [|e|\r\n        (:is) ! (e) (Color) call.\r\n    ] select.\r\n    red = 255-(! getRed). green = 255-(! getGreen). blue = 255-(! getBlue).\r\n    yyy = ! (red) (green) (blue) max.\r\n    args ! [|arg; r g b y|\r\n        r=255-(arg ! getRed).\r\n        g=255-(arg ! getGreen).\r\n        b=255-(arg ! getBlue).\r\n        y=! (r) (g) (b) max.\r\n        red = red+r. green = green+g. blue = blue+b. yyy = yyy+y.\r\n    ] each.\r\n    m = yyy / (! (red) (green) (blue) max) / ((args:length)+1).\r\n    Color ! (255-red*m) (255-green*m) (255-blue*m) create.\r\n].\r\n\r\nBlack=Color!0 0 0 create.\r\nWhite=Color!255 255 255 create.\r\nBlue=Color!8 8 255 create.\r\nRed=Color!255 8 8 create.\r\nGreen=Color!8 255 8 create.\r\nPink=Color!255 0 255 create.\r\nMagenta=Color!255 0 255 create.\r\nCyan=Color!0 255 255 create.\r\nYellow=Color!255 255 0 create.\r\n\r\n"]}