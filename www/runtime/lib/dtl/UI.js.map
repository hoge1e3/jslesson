{"version":3,"sources":["/home/devel/devel/Turtle/UI.dtl"],"names":[],"mappings":"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","sourcesContent":["// Dolittle\r\nScreen=! create.\r\nScreen:width?=[\r\n    $ ! (window) create width.\r\n].\r\nScreen:height?=[\r\n    $ ! (window) create height.\r\n].\r\nScreen:paint=[|c| \r\n    $ ! \"body\" create \"background-color\" (c+\"\") css.\r\n].\r\n! \"Screen\" \"Panel\" addAlias.\r\n\r\nUI=! create.\r\nUI:setTrans=[|;str|\r\n    str=\"postion:absolute;left:\"+(pos:x)+\";top:\"+(pos:y)+\";\".\r\n    element ! \"transform\" (str) attr\r\n    \"data-trans\" ((pos:x)+\",\"+(pos:y)) attr.\r\n    this.\r\n].\r\nUI:hide=[\r\n    [element] ! then [ element ! show] execute.\r\n    this.\r\n].\r\nUI:show=[\r\n    [element] ! then [ element ! hide] execute.\r\n    this.\r\n].\r\nUI!\"hide\" \"die\" addAlias.\r\nUI!\"show\" \"appear\" addAlias.\r\n\r\nUI:top=((Screen! height?)/2) - 20.\r\nUI:autoLayout=[\r\n    UILayout! (this) add.\r\n    /*[last] ! then [\r\n        ! (last ! right?) (last ! top?) moveTo\r\n    ] else [\r\n        !  (-(Screen ! width?) / 2+20) (top) moveTo. \r\n    ] execute.\r\n    UI:last=this.*/\r\n].\r\nUI:moveTo=[|left top|\r\n    UILayout! (this) (left) (top) remove.\r\n    this.\r\n].\r\nUI:moveBy=[|dx dy|\r\n    ! ((!left?)+dx) ((!top?)+dy) moveTo\r\n].\r\nUI:left?=[\r\n    [element] ! then [ (element ! offset):left-(Screen ! width?)/2 ] else [0] execute.  \r\n].\r\nUI ! \"left?\" \"xpos?\" addAlias.\r\nUI:right?=[\r\n    (! left?) + (! width?)\r\n].\r\nUI:top?=[\r\n    [element] ! then [ -((element ! offset):top-(Screen ! height?)/2) ] else [0] execute.  \r\n].\r\nUI ! \"top?\" \"ypos?\" addAlias.\r\nUI:bottom?=[\r\n    (! top?) - (! height?)\r\n].\r\nUI:width?=[//offsetWidth??\r\n    [element] ! then [ element ! outerWidth] else [0] execute.  \r\n].\r\nUI:height?=[\r\n    [element] ! then [ element ! outerHeight] else [0] execute.  \r\n].\r\nUI:width=[|w|\r\n    [element] ! then [ element ! (w) width ] execute. this.\r\n].\r\nUI:height=[|w|\r\n    [element] ! then [ element ! (w) height ] execute. this.\r\n].\r\nUI:nextLine=[|;top left|\r\n    /*[last] ! then [\r\n        console ! \"NL\" (Screen! width?) (last!bottom?) log.\r\n        left=-(Screen! width?) /2 + 20.\r\n        //top=(UI:top)-((UI:last) ! outerHeight).\r\n        top=last ! bottom?.\r\n        !(left) (top) moveTo.\r\n    ] execute.    */\r\n    UILayout! (this) br.\r\n    this.\r\n].\r\nUI:write=[|m|\r\n    [element] ! then [ (element ! 0 get):innerHTML=! (m) num2str] execute.\r\n    self\r\n].\r\nUI ! \"write\" \"set\" addAlias.\r\nUI:add=[|m|\r\n    [element]!then[!(((element!0 get):innerHTML)+m)write]execute.\r\n    self\r\n].\r\nUI:newLine=[\r\n    !\"<br>\"add.\r\n    self\r\n].\r\nUI:clear=[!\"\" write].\r\nUI:num2strDigits=1000000.\r\nUI:num2str=[|v;r|\r\n    [v==null]!then [v=\"\"] execute.\r\n    [v==undef]!then [v=\"\"] execute.\r\n    [(! (v) typeof)==\"number\"] ! then [\r\n        v=((window:Math) ! (v*num2strDigits) round) /num2strDigits.\r\n    ] execute.\r\n    v+\"\"\r\n    //    [ (! (r-v) abs) <0.00000001 ] ! then [ r+\"\" ] else [v+\"\"] execute. \r\n].\r\nUI:int2str=UI:num2str.\r\nUI:str2num=[|s;r|\r\n    r=window ! (s) parseFloat.\r\n    [r==r] ! then [r] else [s] execute.\r\n].\r\nUI:str2int=UI:str2num.\r\nUI:readString=[\r\n    [element] ! then [element ! text] else [\"\"] execute.\r\n].\r\nUI:read=[\r\n    ! (! readString) str2num.\r\n].\r\nUI ! \"read\" \"get\" addAlias.\r\nUI:inc=[|by|\r\n    by=[by] ! [1] or.\r\n    ! ( (! read)-0+by) write.\r\n].\r\nUI! \"inc\" \"increment\" addAlias.\r\nUI:dec=[|by|\r\n    by=[by] ! [1] or.\r\n    ! ( (! read)-by) write.\r\n].\r\nUI! \"dec\" \"decrement\" addAlias.\r\n/*本多追加分*/\r\nUI:paint=[|r g b;args c|\r\n    args=:window:Array:prototype:slice!(arguments)call.\r\n    [args:length==1]!then[\r\n        c=r.    \r\n    ]else[\r\n        c=Color!(r)(g)(b)create.\r\n    ]execute.\r\n    self:element!\"background-color\" (c)css .\r\n    self\r\n].\r\nUI:fontColor=[|r g b;args c|\r\n    args=:window:Array:prototype:slice!(arguments)call.\r\n    [args:length==1]!then[\r\n        c=r.    \r\n    ]else[\r\n        c=Color!(r)(g)(b)create.\r\n    ]execute.\r\n    self:element!\"color\" (c)css.\r\n    self\r\n].\r\nUI:fontSize=[|s|\r\n    self:element!\"font-size\" (s/10+\"em\")css.\r\n    self\r\n].\r\n\r\nUI:size=[|w h|\r\n    self:element!\"width\" (w+\"px\") css\r\n    \"height\" (h+\"px\") css.\r\n    self\r\n].\r\n/*以上*/\r\n\r\nUI:attachEvent=[].\r\nUI:container=$ ! \"<div>\" create \"body\" appendTo \r\n\"position\" \"absolute\" css \r\n\"left\" ( (Screen!width?) / 2) css \r\n\"top\" ( (Screen!height?) / 2) css.\r\n$ ! (window) create ([\r\n    UI:container !\r\n    \"left\" ( (Screen!width?) / 2) css \r\n    \"top\" ( (Screen!height?) / 2) css.\r\n] ! (this) bind) resize.\r\nUILayout=!create.\r\nUILayout:space=20.\r\nUILayout:initElem=[\r\n    element=$!\"<div>\" create (UI:container) appendTo.\r\n    element ! \r\n    \"white-space\" \"nowrap\" css\r\n    \"position\" \"absolute\" css\r\n    \"left\" (-(Screen ! width?)/2 +space) css \r\n    \"top\" (-(Screen! height?)/2+space) css. \r\n    $ ! (window) create ([\r\n        element ! \r\n        \"left\" (-(Screen ! width?)/2 +space) css \r\n        \"top\" (-(Screen! height?)/2+space) css. \r\n    ] ! (this) bind ) resize.\r\n].\r\nUILayout ! initElem.\r\nUILayout:add=[|ui|\r\n    ui:element ! remove.\r\n    ui:inUILayout=this.\r\n    element ! (ui:element) append.\r\n    ui ! attachEvent.\r\n    ui:element ! \"position\" \"static\" css.\r\n].\r\nUILayout:remove=[|ui left top|\r\n    [ui:inUILayout] ! then [ \r\n        ui:element ! remove.\r\n        ui:inUILayout=false.\r\n        UI:container ! (ui:element) append.\r\n        ui ! attachEvent.\r\n    ] execute.\r\n    ui:element ! \"position\" \"absolute\" css \"left\" (left) css \"top\" (-top) css.\r\n].\r\nUILayout:br=[|ui|\r\n    $ ! \"<br>\" create (ui:element) insertBefore.\r\n].\r\n\r\nLabel=UI!create.\r\nLabel:left=0.\r\nLabel:initialize=[|label;t|\r\n    t=this.\r\n    [label==undef]!then [label=! read] execute.\r\n    element=$!\"<span>\"create\r\n    (!(label) num2str) text\r\n    //\"position\" \"absolute\" css\r\n    \"font-size\" \"1.0em\" css\r\n    \"vertical-align\" \"top\" css\r\n    \"white-space\" \"nowrap\" css.\r\n    //(container) appendTo.\r\n    !autoLayout\r\n].\r\nLabel:fontColor=[|r g b;args c|\r\n    args=:window:Array:prototype:slice!(arguments)call.\r\n    [args:length==1]!then[\r\n        c=r.    \r\n    ]else[\r\n        c=Color!(r)(g)(b)create.\r\n    ]execute.\r\n    self:element!\"color\" (c)css.\r\n    self\r\n].\r\nLabel:fontSize=[|s|\r\n    self:element!\"font-size\" (s/10+\"em\")css.\r\n    self\r\n].\r\n\r\nButton=UI ! create.\r\nButton:action=[].\r\n//Button ! \"action\" addEventType.\r\nButton:left=0.\r\nButton:attachEvent=[|;t| t=this. element ! [t ! action] click].\r\nButton:initialize=[|label key;t|\r\n    t=this.\r\n    [label==undef]!then [label=! read] execute.\r\n    element=$!\"<button>\" create \r\n    (! (label) num2str) text \r\n    \"vertical-align\" \"top\" css\r\n    \"white-space\" \"nowrap\" css.\r\n    //\"position\" \"absolute\" css. \r\n    //(container) appendTo.\r\n    //! attachEvent.\r\n    ! autoLayout.\r\n    /*本多追加分*/\r\n    element! \"font-size\" \"1.0em\" css\r\n    \"white-space\" \"nowrap\" css\r\n    \"border-style\" \"none\" css.\r\n    [key]!then[\r\n        :window![:window:document!\"keydown\"[|k|\r\n                [k:keyCode==(:Button:keyCodeDict!\r\n                ((key+\"\")!toUpperCase)read)]!then[t!action]execute.\r\n        ](:true)addEventListener.]$.\r\n    ]execute.\r\n    /*以上*/\r\n].\r\nButton:setAction=[|a|\r\n    action=a.this.\r\n].\r\n\r\nButton:keyCodeDict=Dict!create.\r\n[|;arr|\r\n    arr=Array!\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\"create. \r\n    [|n|\r\n        Button:keyCodeDict!(arr!(n)get)(n+47)write\r\n    ]!(arr!length?)repeat.\r\n    arr=Array!\"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\r\n    \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"U\"\r\n    \"V\" \"W\" \"X\" \"Y\" \"Z\" create.\r\n    [|n|\r\n        Button:keyCodeDict!(arr!(n)get)(n+64)write\r\n    ]!(arr!length?)repeat.\r\n    arr=Array!\"F1\" \"F2\" \"F3\" \"F4\" \"F5\" \"F6\" \"F7\" \"F8\"\r\n    \"F9\" \"F10\" \"F11\" \"F12\"create.\r\n    [|n|\r\n        Button:keyCodeDict!(arr!(n)get)(n+111)write\r\n    ]!(arr!length?)repeat.\r\n    Button:keyCodeDict!\r\n    \"ESCAPE\" 27 write\r\n    \"MINUS\" 189 write\r\n    \"BACK_SLASH\" 220 write\r\n    \"OPEN_BRACKET\" 219 write\r\n    \"CLOSE_BRACKET\" 221 write\r\n    \"SEMICOLON\" 186 write\r\n    \"COMMA\" 188 write \r\n    \"PERIOD\" 190 write\r\n    \"SLASH\" 191 write \r\n    \"ENTER\" 13 write\r\n    \"PAGE_UP\" 33 write\r\n    \"PAGE_DOWN\" 34 write\r\n    \"END\" 35 write\r\n    \"HOME\" 36 write\r\n    \"LEFT\" 37 write\r\n    \"UP\" 38 write\r\n    \"RIGHT\" 39 write\r\n    \"DOWN\" 40 write\r\n    \"SPACE\" 32 write\r\n    \"SHIFT\" 16 write\r\n    \"CTRL\" 17 write.\r\n]!execute.\r\n/*Button:keyCodeDict![|k|\r\n    k=(k+\"\") ! toUpperCase.\r\n    [k==\"LEFT\"]!then[37]\r\n    else[k==\"UP\"]then[38]\r\n    else[k==\"RIGHT\"]then[39]\r\n    else[k==\"DOWN\"]then[40]\r\n    else[k==\"SPACE\"]then[32]execute.\r\n].*/\r\nButton:inc=[|;label|\r\n    label=(self:element!0 get):innerHTML.\r\n    [label!(:window!\"^([0-9０-９]+)$\"RegExp)match]!then[\r\n        self:element!((:window!(label)parseInt)+1)text.\r\n    ]execute.\r\n    self\r\n].\r\n/*Button:write=[|m|\r\n    [element] ! then [element ! (m) val] execute.\r\n    self\r\n].\r\nButton:read=[\r\n    [element] ! then [element ! val] else [\"\"] execute.\r\n].*/\r\n\r\nField=UI! create.\r\nField:initialize=[|label|\r\n    [label==undef]!then [label=! read] execute.\r\n    element=$!\"<input>\" create \r\n    (!(label) num2str) val \r\n    \"vertical-align\" \"top\" css\r\n    \"white-space\" \"nowrap\" css.\r\n    //\"position\" \"absolute\" css.\r\n    //(container) appendTo.\r\n    ! autoLayout.\r\n].\r\nField:write=[|m|\r\n    [element] ! then [element ! (! (m) num2str) val] execute.\r\n    self\r\n].\r\nField:readString=[\r\n    [element] ! then [element ! val] else [\"\"] execute.\r\n].\r\n\r\nTextArea=UI! create.\r\nListBox=TextArea ! create.\r\nTextArea:initialize=[|;label|\r\n    label=! read.\r\n    manualRow=false.\r\n    manualCol=false.\r\n    element=$!\"<textarea>\" create \r\n    (label) val \r\n    \"vertical-align\" \"top\" css.\r\n    //\"white-space\" \"nowrap\" css.\r\n    //\"position\" \"absolute\" css.\r\n    //(container) appendTo.\r\n    element ! \"readonly\" (isReadOnly) attr.\r\n    ! autoResize.\r\n    ! autoLayout.\r\n    writeLn ! (self) (arguments) apply.\r\n].\r\nTextArea:autoNewLine=[|f| \r\n    [f==undef] ! then [f=true] execute.\r\n    isAutoBR=f.\r\n    this.\r\n].\r\nTextArea ! \"autoNewLine\" \"autoBR\" addAlias.\r\nTextArea:setReadOnly=[|f| \r\n    isReadOnly=f.\r\n    [element]!then[element ! \"readonly\" (f) attr]execute.\r\n    this.\r\n].\r\nTextArea:readOnly=[!(true) setReadOnly].\r\nTextArea:writable=[!(false) setReadOnly].\r\nTextArea ! \"writable\" \"readWrite\" addAlias.\r\nListBox ! readOnly autoBR.\r\nTextArea:mblen=[|s;i c r| \r\n    i=0.r=0.\r\n    [i<(s:length)] ! while [\r\n        c=s ! (i) charCodeAt.\r\n        r=r+([c>=128] ! then [2] else[1] execute).\r\n        i=i+1.    \r\n    ] execute.\r\n    r.\r\n].\r\nTextArea:autoResize=[|;r c|\r\n    r=1.c=1.\r\n    ! readString \"\\n\" split [|s;l|\r\n        l=! (s) mblen.\r\n        [l>c] ! then [c=l] execute.\r\n        r=r+1.\r\n    ] each.\r\n    [manualRow] ! then [] else [element ! \"rows\"(r) attr] execute.\r\n    [manualCol] ! then [] else [element ! \"cols\"(c) attr] execute.\r\n    this.\r\n].\r\nTextArea:setRow=[|r| element ! \"rows\"(r) attr. manualRow=true. self].\r\nTextArea:setCol=[|c| element ! \"cols\"(c) attr. manualCol=true. self].\r\nTextArea:overwrite=[|;a buf|\r\n    ! clear.\r\n    writeLn ! (self) (arguments) apply. \r\n].\r\nTextArea:readString=[\r\n    [element] ! then [element ! val] else [\"\"] execute.\r\n].\r\nTextArea:read=TextArea:readString.\r\nTextArea:write=[\r\n    (Array:prototype:slice) ! (arguments) call [|cont|\r\n        /*[cont==null]!then [cont=\"\"] execute.\r\n        [cont==undef]!then [cont=\"\"] execute.\r\n        [cont:each] ! then [\r\n            cont ! [|e| ! (e) writeLn ] each.  \r\n        ] else [\r\n            ! ((!readString)+(!(cont) num2str)) rawOverwrite\r\n        ] execute.*/\r\n        ! (cont) (isAutoBR) _write1\r\n    ] each.\r\n    ! autoResize.\r\n].\r\nTextArea:rawOverwrite=[|c|\r\n    [element] ! then [element ! (c) val] execute.\r\n    self.\r\n].\r\nTextArea:rawAppend=[|cont|\r\n    ! ((!readString)+(!(cont) num2str)) rawOverwrite.\r\n].\r\nTextArea:writeLn=[\r\n    (Array:prototype:slice) ! (arguments) call [|cont|\r\n        /*[cont==null]!then [cont=\"\"] execute.\r\n        [cont==undef]!then [cont=\"\"] execute.\r\n        [cont:each] ! then [\r\n            cont ! [|e| ! (e) writeLn ] each.  \r\n        ] else [\r\n            ! (cont) write newLine.\r\n        ] execute.*/\r\n        ! (cont) (true) _write1\r\n    ] each.\r\n    ! autoResize\r\n].\r\nTextArea:_write1=[|cont br|\r\n    [!(cont) (Array) instanceof] ! then [\r\n        cont ! [|e| ! (e) (br) _write1 ] each.  \r\n    ] else [\r\n        ! (cont) rawAppend.\r\n        [br]!then [! \"\\n\" rawAppend] execute.\r\n    ] execute.\r\n    this.\r\n].\r\n\r\nTextArea:newLine=[\r\n    ! (\"\\n\") rawAppend.\r\n].\r\nTextArea:clear=[! \"\" rawOverwrite.  ! autoResize].\r\n\r\nTextArea:readAsArray=[\r\n    !read  \"\\n\"  split [|e|e!=\"\"] select ([|e|\r\n        ! (e) str2num\r\n    ]!(self) bind)  map  \r\n].\r\nTextArea:changeLine=[|no line| \r\n    !(! readAsArray(no) (line) set) overwrite\r\n].\r\n\r\n\r\n/*Field:inc=[|by|\r\n    by=[by] ! [1] or.\r\n    element ! ((element ! val)-0+by)  val.\r\n    \r\n].*/\r\n"]}