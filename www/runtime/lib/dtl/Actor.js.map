{"version":3,"sources":["/Tonyu/Projects/Turtle/Actor.dtl"],"names":[],"mappings":"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","sourcesContent":["$=!create.\n$:create=[|tag| (window:$) ! (root) (tag) call. ].\nActor=!create.\nActor:pos=Vec2:O.\nActor:dir=0.\nActor:num=[|x| [x]!then[x]else[0]execute ].\n//Actor:actorList=Array! create.\nActor:createSVGElem=[|tag|\n    $! (document ! \n    \"http://www.w3.org/2000/svg\" (tag)\n    createElementNS\n    ) create.\n].\nActor:copySVGElem=[|dst src;t n a s|\n    src=$!(src)create.\n    dst=$!(dst)create.\n    t=this.\n    src ! children [\n        s=this.\n        n=t ! (s:tagName) createSVGElem  0 get.\n        a=(t:Array:prototype:slice)! (s:attributes) call.\n        a ! [|an|\n            an=an:name.\n            n ! (an) (s!(an) getAttribute) setAttribute.\n        ] each.\n        dst ! (n) append.\n        t ! (n) (s) copySVGElem.\n    ] each.\n].\nActor:appear=[\n    group ! (this) add.\n    !setTrans.\n    isShowing=true.\n    this.\n].\nActor:die=[|;i|\n    group ! (this) remove.\n    isShowing=false.\n    this.\n].\nActor:group=Actor !create.\nActor:group:members=Array!create.\nActor:group:remove=[|m;i|\n    i=members ! (m) indexOf.\n    [i>=0] ! then [\n        members ! (i) (1) splice.    \n    ] execute.    \n    [m:element] ! then [m:element ! remove] execute.\n].\nActor:group:add=[|m;i|\n    [m:getCrashShape] ! then [] else [ system ! (\"NO\"+m) throw ]execute. \n    i=members ! (m) indexOf.\n    [i<0] ! then [\n        members ! (m) push.\n        element ! (m:element) append.\n    ] execute.\n].\n\nActor:initSVG=[|;t wndj svgw svgh|\n    svg=$ ! \"svg\" create.\n    console ! \"SVG\" (svg) log.\n    wndj=$ ! (window) create.\n    svgw=(wndj ! width)-10.\n    svgh=(wndj ! height)-10.\n    [svgh<=0] ! then [svgh=svgw/16*9] execute.\n    [svg:length==0] ! then [\n        //window ! (svgw+\",\"+svgh) alert.\n        svg= !\"svg\" createSVGElem \n        \"width\" (svgw) attr\n        \"height\" (svgh) attr\n        \"position\" \"absolute\" css\n        \"body\" appendTo.\n    ] execute.\n    svg_g = svg ! \"g\" find.\n    [svg_g:length==0] ! then [\n        svg_g= ! \"g\" createSVGElem \n        \"transform\" (\"translate(\"+(svgw/2)+\",\"+(svgh/2)+\") scale(1,-1)\") attr \n        (svg) appendTo.\n    ] execute.\n    t=self.\n    wndj ! [\n        svgw=(wndj ! width)-10.\n        svgh=(wndj ! height)-10.\n        [svgh<=0] ! then [svgh=svgw/16*9] execute.\n        (t:svg) ! \"width\" (svgw) attr \"height\" (svgh) attr.\n        (t:svg_g) !\"transform\" (\"translate(\"+(svgw/2)+\",\"+(svgh/2)+\") scale(1,-1)\") attr. \n    ] resize.\n    group:element=svg_g.\n].\nActor! initSVG.\n\n// element pos dir\nActor:forward=[|by|\n    _lastPos=pos.\n    _lastStep=by.\n    pos=pos ! ((Vec2:X) ! (dir) rotate (by) mul) add.\n    !setTrans.\n    this.\n].\nActor:backward=[|by|\n    ! (-by) forward.\n].\nActor:turnLeft=[|by| \n    dir=dir+by.\n    !setTrans.\n    this.\n].\nActor:turnRight=[|by| \n    ! (-by) turnLeft.\n].\nActor:leftTurn=Actor:turnLeft.\nActor:rightTurn=Actor:turnRight.\n\nActor:getCrashShape=[\n    Polygon ! create\n    (-width/2) (-height/2) addVertex\n    (width/2) (-height/2) addVertex\n    (width/2) (height/2) addVertex\n    (-width/2) (height/2) addVertex\n    (dir) (pos) transform.\n].\n/*Actor:getCrashPolygon=[\n    ! getWorldPolygon toPolyKArray.\n].*/\nActor:crashTo=[|o|\n    [o:getCrashShape] ! then [] else [ system ! (\"NO\"+o) throw ]execute. \n    \n    (!getCrashShape) ! (o ! getCrashShape) intersects.\n    //    (window:PolyK) ! (! getCrashPolygon) (o ! getCrashPolygon) Intersects.\n].\nActor:setTrans=[|str|\n    str=\"translate(\"+(pos:x)+\" \"+(pos:y)+\") \".\n    str=str+\"rotate(\"+dir+\") \".\n    element ! \"transform\" (str) attr\n    \"data-trans\" ((pos:x)+\",\"+(pos:y)+\",\"+dir) attr.\n    [isShowing] !then [! checkCrash] execute.\n    this.\n].\nActor:moveTo=[|dx dy| \n    dx=!(dx) num.dy=!(dy) num.\n    pos=Vec2 !(dx)(dy) create. \n    ! setTrans\n].\nActor:moveBy=[|dx dy|\n    dx=!(dx) num.dy=!(dy) num.\n    ! (pos:x+dx) (pos:y+dy) moveTo\n].\nActor:setDir=[|d|\n    dir=!(d) num.\n    !setTrans\n].\nActor:getDir=[dir].\n//Actor ! \"collision\" addEventType.// ★\nActor:collision=[].\nActor:checkCrash=[|;t|\n    [Actor:_doingCheckCrash] ! then [] else [\n        Actor:_doingCheckCrash=1.//TODO:true\n        !allCrash [|a| \n            ! (a) collision.\n            a ! (this) collision.\n        ] each. //TODO: localize\n        Actor:_doingCheckCrash=0.\n    ] execute. \n].\nActor:allCrash=[|;t res|\n    res=Array ! create.\n    (group:members) ! [|a|\n        [this!=a] ! then [\n            [! (a) crashTo] ! then [\n                res!(a) push.\n            ] execute.\n        ] execute.\n    ] each.\n    res.\n].\nActor:bounce＝[| _hitTarget; lp ld stp a |\n    lp=_lastPos.ld=dir.\n    stp=lp ! (pos) sub len.\n    pos=lp.\n    a=2*( dir - ( _hitTarget ! getDir ) ).\n    ! (a) turnRight.\n    ! ( stp ) forward.\n    [(! allCrash):length] ! then [\n        pos=lp. dir=ld.\n        ! ( 180- a ) turnLeft.\n        ! ( stp ) forward.\n        [(! allCrash):length] ! then [\n            pos=lp. dir=ld.\n            ! 180 turnLeft.\n        ] execute.\n    ] execute.\n    self\n].\nActor:xpos?=[pos:x].\nActor:ypos?=[pos:y].\n"]}