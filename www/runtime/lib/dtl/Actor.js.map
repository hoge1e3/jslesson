{"version":3,"sources":["/home/devel/devel/Turtle/Actor.dtl"],"names":[],"mappings":"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","sourcesContent":["//NOGENERATOR\r\n$=!create.\r\n$:create=[|tag| (window:$) ! (root) (tag) call. ].\r\nActor=!create.\r\nActor:pos=Vec2:O.\r\nActor:dir=0.\r\nActor:num=[|x| [x]!then[x]else[0]execute ].\r\n//Actor:actorList=Array! create.\r\nActor:createSVGElem=[|tag|\r\n    $! (document !\r\n    \"http://www.w3.org/2000/svg\" (tag)\r\n    createElementNS\r\n    ) create.\r\n].\r\nActor:copySVGElem=[|dst src;t n a s|\r\n    src=$!(src)create.\r\n    dst=$!(dst)create.\r\n    t=this.\r\n    src ! children [\r\n        s=this.\r\n        n=t ! (s:tagName) createSVGElem  0 get.\r\n        a=(t:Array:prototype:slice)! (s:attributes) call.\r\n        a ! [|an|\r\n            an=an:name.\r\n            n ! (an) (s!(an) getAttribute) setAttribute.\r\n        ] each.\r\n        dst ! (n) append.\r\n        t ! (n) (s) copySVGElem.\r\n    ] each.\r\n].\r\nActor:show=[\r\n    group ! (this) add.\r\n    !setTrans.\r\n    isShowing=true.\r\n    this.\r\n].\r\nActor:hide=[|;i|\r\n    group ! (this) remove.\r\n    isShowing=false.\r\n    this.\r\n].\r\nActor!\"show\" \"appear\" addAlias \"hide\" \"die\" addAlias.\r\nActor:group=Actor !create.\r\nActor:group:members=Array!create.\r\nActor:group:remove=[|m;i|\r\n    i=members ! (m) indexOf.\r\n    [i>=0] ! then [\r\n        members ! (i) (1) splice.\r\n    ] execute.\r\n    [m:element] ! then [m:element ! remove] execute.\r\n].\r\nActor:group:add=[|m;i|\r\n    [m:getCrashShape] ! then [] else [ system ! (\"NO\"+m) throw ]execute.\r\n    i=members ! (m) indexOf.\r\n    [i<0] ! then [\r\n        members ! (m) push.\r\n        element ! (m:element) append.\r\n    ] execute.\r\n].\r\n\r\nActor:initSVG=[|;t wndj svgw svgh|\r\n    svg=$ ! \"svg\" create.\r\n    console ! \"SVG\" (svg) log.\r\n    wndj=$ ! (window) create.\r\n    svgw=(wndj ! width)-10.\r\n    svgh=(wndj ! height)-10.\r\n    [svgh<=0] ! then [svgh=svgw/16*9] execute.\r\n    [svg:length==0] ! then [\r\n        //window ! (svgw+\",\"+svgh) alert.\r\n        svg= !\"svg\" createSVGElem \r\n        \"id\" \"turtle_svg\" attr\r\n        \"width\" (svgw) attr\r\n        \"height\" (svgh) attr\r\n        \"position\" \"absolute\" css\r\n        \"body\" appendTo.\r\n    ] execute.\r\n    svg_g = svg ! \"g\" find.\r\n    [svg_g:length==0] ! then [\r\n        svg_g= ! \"g\" createSVGElem \r\n        \"transform\" (\"translate(\"+(svgw/2)+\",\"+(svgh/2)+\") scale(1,-1)\") attr \r\n        (svg) appendTo.\r\n    ] execute.\r\n    t=self.\r\n    wndj ! [\r\n        svgw=(wndj ! width)-10.\r\n        svgh=(wndj ! height)-10.\r\n        [svgh<=0] ! then [svgh=svgw/16*9] execute.\r\n        (t:svg) ! \"width\" (svgw) attr \"height\" (svgh) attr.\r\n        (t:svg_g) !\"transform\" (\"translate(\"+(svgw/2)+\",\"+(svgh/2)+\") scale(1,-1)\") attr. \r\n    ] resize.\r\n    group:element=svg_g.\r\n].\r\nActor! initSVG.\r\n\r\n// element pos dir\r\nActor:forward=[|by|\r\n    by=!(by) num.\r\n    _lastPos=pos.\r\n    _lastStep=by.\r\n    pos=pos ! ((Vec2:X) ! (dir) rotate (by) mul) add.\r\n    !setTrans.\r\n    this.\r\n].\r\nActor:backward=[|by|\r\n    by=!(by) num.\r\n    ! (-by) forward.\r\n].\r\nActor:turnLeft=[|by|\r\n    by=!(by) num.\r\n    dir=dir+by.\r\n    !setTrans.\r\n    this.\r\n].\r\nActor:turnRight=[|by|\r\n    by=!(by) num.\r\n    ! (-by) turnLeft.\r\n].\r\nActor:leftTurn=Actor:turnLeft.\r\nActor:rightTurn=Actor:turnRight.\r\n\r\nActor:getCrashShape=[\r\n    Polygon ! create\r\n    (-width/2) (-height/2) addVertex\r\n    (width/2) (-height/2) addVertex\r\n    (width/2) (height/2) addVertex\r\n    (-width/2) (height/2) addVertex\r\n    (dir) (pos) transform.\r\n].\r\n//Actor:getCrashPolygon=[\r\n    //    ! getWorldPolygon toPolyKArray.\r\n//].\r\nActor:crashTo=[|o|\r\n    [o:getCrashShape] ! then [] else [ system ! (\"NO\"+o) throw ]execute.\r\n    \r\n    (!getCrashShape) ! (o ! getCrashShape) intersects.\r\n    //    (window:PolyK) ! (! getCrashPolygon) (o ! getCrashPolygon) Intersects.\r\n].\r\nActor:_scale=1.\r\nActor:setTrans=[|str|\r\n    str=\"translate(\"+(pos:x)+\" \"+(pos:y)+\") \".\r\n    str=str+\"rotate(\"+dir+\") \".\r\n    str=str+\"scale(\"+_scale+\" \"+_scale+\") \".\r\n    element ! \"transform\" (str) attr\r\n    \"data-trans\" ((pos:x)+\",\"+(pos:y)+\",\"+dir) attr.\r\n    [isShowing] !then [! checkCrash] execute.\r\n    this.\r\n].\r\nActor:scale=[|s| _scale=_scale*s.!setTrans].\r\nActor:moveTo=[|dx dy|\r\n    dx=!(dx) num.dy=!(dy) num.\r\n    pos=Vec2 !(dx)(dy) create.\r\n    ! setTrans\r\n].\r\nActor:moveToCenter=[\r\n    !0 0 moveTo.\r\n].\r\nActor!\"moveToCenter\" \"moveCenter\" addAlias.\r\n\r\nActor:moveBy=[|dx dy|\r\n    dx=!(dx) num.dy=!(dy) num.\r\n    ! (pos:x+dx) (pos:y+dy) moveTo\r\n].\r\nActor:setDir=[|d|\r\n    dir=!(d) num.\r\n    !setTrans\r\n].\r\nActor ! \"setDir\" \"direction\" addAlias.\r\nActor:getDir=[dir].\r\nActor ! \"getDir\" \"direction?\" addAlias.\r\n//Actor ! \"collision\" addEventType.// ★\r\n:collision=[].\r\n:collision:isEventHandler=true.\r\n\r\nActor:checkCrash=[|;t|\r\n    [Actor:_doingCheckCrash] ! then [] else [\r\n        Actor:_doingCheckCrash=1.//TODO:true\r\n        !allCrash [|a|\r\n            ! (a) collision.\r\n            a ! (this) collision.\r\n        ] each. //TODO: localize\r\n        Actor:_doingCheckCrash=0.\r\n    ] execute.\r\n].\r\nActor:allCrash=[|;t res|\r\n    res=Array ! create.\r\n    (group:members) ! [|a|\r\n        [this!=a] ! then [\r\n            [! (a) crashTo] ! then [\r\n                res!(a) push.\r\n            ] execute.\r\n        ] execute.\r\n    ] each.\r\n    res.\r\n].\r\nActor:bounce＝[| _hitTarget; lp ld stp a |\r\n    lp=_lastPos.ld=dir.\r\n    stp=lp ! (pos) sub len.\r\n    pos=lp.\r\n    a=2*( dir - ( _hitTarget ! getDir ) ).\r\n    ! (a) turnRight.\r\n    ! ( stp ) forward.\r\n    [(! allCrash):length] ! then [\r\n        pos=lp. dir=ld.\r\n        ! ( 180- a ) turnLeft.\r\n        ! ( stp ) forward.\r\n        [(! allCrash):length] ! then [\r\n            pos=lp. dir=ld.\r\n            ! 180 turnLeft.\r\n        ] execute.\r\n    ] execute.\r\n    self\r\n].\r\nActor:xpos?=[pos:x].\r\nActor:ypos?=[pos:y].\r\n"]}