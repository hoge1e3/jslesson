module ! "Vec2" "Actor" "Group" "Util" "UI" "Timer" "Turtle" "Figure" "DOM" "Color" "Japanese" [
    /*かめた＝タートル！作る。
    ず１＝「かめた！１２０ 歩く １２０ 左回り」！３ 繰り返す （青）図形を作る。
    ず２＝ず１！作る （赤）塗る ３０ ３０ 移動する。
    ず１２＝図形 ！（ず１）（ず２）結合する ３０ 右回り。
    ず３４＝ず１２！作る ０ -150 移動する。
    タイマー！作る「ず１２！ 10 右回り。 ず３４！ 10 左回り」実行。
    */
    //ラベル！ 作る "(sin(30))" 書く (sin(30)) 作る。
    
    /*test=[|x y|
        (and ! (x==5) (y==5) true) ! then [
            "honto"    
        ] else ["uso"] execute.
    ].*/
    //TextArea ! create (null) (undef) 10 writeLn.
    配列データ＝配列！ 10 "20" (sin(30)) 作る。
    
    記録１＝リスト！1 2 3 作る。
    記録１！"4" 5 （配列データ）6 "7" 書いて改行。
    記録１！8 書く  改行。
    記録１！9 書く。
    ラベル！（記録１！配列で読む） 作る。
    //記録１！"hoge" (true) _write1 (Array ! 3 5 create) (true) _write1.
    
    
    a1=テキストエリア！1 2 3 作る。
    a1！4 5 6 上書き。// BA。(1)1個目しか書かれない。
    
    a2=テキストエリア！7 8 9 作る。
    s1=a2！読む。
    ラベル！（s1）作る。// BA。(2)1個目しか表示されない。
    ラベル！（s1！長さ？）作る。// BA。(3)「読む」の結果は文字列でない？
    ボタン！”けし”作る「記録１！クリア」動作設定。
    /*かめた＝タートル！作る。
    「かめた！９０ 左回り  １００ 歩く」！４ 繰り返す（赤）図形を作る。
    にげるボタン＝ボタン！作る 消える。
    にげるボタン：動作＝「
        ！30 -30 移動する。
    」。
    「|i|  
        u=にげるボタン！(random(100))作る。
        [i==10] ! then [u ! 次の行 ] execute.
    」！20 繰り返す。
    てき＝テキストエリア！作る 次の行。
    ラベル！”てすと” 作る。
    ふい＝フィールド！”とすて”作る。
    ボタン！”ふやし” 作る  「てき！"Enemy"書いて改行」動作設定。
    ボタン！”いどう” 作る  「ふい！ 50 -10 移動する」動作設定。
    */
    //b:動作＝「ふぃ！"あいうえ" 書く 改行」.
    /*Button ! "座布団" create 200 -100 position [
        ラベル！”全部持って行って”  作る。
    ]  動作設定.*/ 
    //Timer ! create[ a:b:c=0] execute.
    /*かめた＝タートル！作る。
    iro1=色！ランダムに作る.
    iro2=色！ランダムに作る.
    hikari=光!(iro1)(iro2) 混ぜる.
    enogu=絵の具!(iro1)(iro2) 混ぜる.
    
    fillRect=[|x y w c|
        かめた！ペンなし (x) (y) 位置  ペンあり。
        「かめた！(w)  歩く  90  右回り」！4  繰り返す  (c)  図形を作る。
    ].
    
    ! -50 100 250 (black) fillRect.
    ! 0 0 100 (iro1) fillRect.
    ! 50 50 100 (iro2)fillRect.
    ! 50 0 50 (hikari)fillRect.
    
    ! -300 0 100 (iro1) fillRect.
    ! -350 50 100 (iro2)fillRect.
    ! -300 0 50 (enogu)fillRect.
    */
    /*ｃ＝ボタン！"DEF"作る 100 100 位置。
    ｄ＝ｃ！作る -100 100 位置。
    e=フィールド！"GHI" 作る  100 -100 位置。
    ｆ＝e! 作る -100 -100 位置。
    ラベル！"A" 作る 消える 現れる 0 200 位置。*/
    /*ボタン！"A" 作る。
    ボタン！"B" 作る。
    ボタン！"C" 作る 次の行。
    ボタン！"D" 作る "E" 作る "F" 作る 次の行。
    */
    
    /*時計＝タイマー！作る  5  回数。
    時計！「かめた！10  歩く。」実行。
    時計！「かめた！90  右回り。」次に実行。
    時計！「かめた！100 歩く。」最後に実行。
    */
    /*    ふ＝フィールド！ 10 作る。
    ら＝ラベル！ 20 作る 次の行。
    ぼ１＝ボタン！”増やす” 作る。
    ぼ１：動作＝「ら！増やす  」。
    ふら＝ボタン！”ふ→ら” 作る。
    ふら：動作＝「ら！（ふ！読む）書く  」。
    らふ＝ボタン！”ら→ふ” 作る。
    らふ：動作＝「ふ！（ら！読む）書く  」。
    */
    //tri=kame! "blue" makeFigure 50 forward.
    /*tri=kame!  makeFigure 50 forward.
    tri2=tri! create 50 forward.
    console ! "crash" ( (window:JSON) ! (tri ! getCrashShape) stringify ) log.
    [kame! 120 forward  144 leftTurn]! 5 repeat.
    star=kame! "red" makeFigure -125 forward.
    tri:vr=10.
    star:vr=10.
    star:collision=[|a| 
        [a==tri] ! then [! "yellow" paint.] execute.
    ].
    t=timer! create. 
    kame:衝突=[|aite|
        aite:vr=-aite:vr.
        ! 10 backward 10 rightTurn.
    ].
    t ! [
        tri ! (tri:vr) leftTurn. 
        star ! (star:vr) rightTurn. 
        kame ! 1 forward.
    ] execute.
    b=Button ! "GO" create.
    b:action=[
        kame ! 50 forward. 
    ].
    Button ! "Went" create.
    Button ! "Gone" create.*/
    
] require.
