import pandas as pd
import numpy as np
print("=== DataFrame ===")
ary = np.arange(27).reshape(-1, 3)
ary[-1] = np.array([0, 1, 2])  # 最後の行だけ上書き
df = pd.DataFrame(data=ary)
print(df)

print("=== T ===")
print(df.T)
print("=== drop ===")
print(df.drop(index=1))
print("=== sort_index ===")
print(df.sort_index())
print("=== sort_values ===")
print(df.sort_values(1))
print("=== isin ===")
print(df.isin([4, 5, 6]))
print("=== isnull ===")
print(df.isnull())
print("=== head ===")
print(df.head())
print("=== tail ===")
print(df.tail())
print("=== info ===")
print(df.info())
print("=== groupby ===")
print(df.groupby(1))
print("=== mean ===")
print(df.mean())
print("=== median ===")
print(df.median())
print("=== mode ===")
print(df.mode())
print("=== var ===")
print(df.var())
print("=== std ===")
print(df.std())
print("=== describe ===")
print(df.describe())
print("=== sum ===")
print(df.sum())
print("=== stack ===")
print(df.stack())
print("=== unstack ===")
print(df.stack().unstack())
print("=== duplicated ===")
print(df.duplicated())
print("=== drop_duplicates ===")
print(df.drop_duplicates())
print("=== size ===")
print(df.size)

print("=== dropna ===")
print(df.append([np.nan]).dropna())
print("=== fillna ===")
print(df.append([np.nan]).fillna(-1))
print("=== columns ===")
print(df.columns)
print("=== dot ===")
print(df.dot(pd.DataFrame(np.arange(12).reshape(3, 4))))
print("=== to_numpy ===")
#pandas0.24.0以降
#print(df.to_numpy())
print("=== shape ===")
print(df.shape)
print("=== at ===")
print(df.at[0, 2])
print("=== iat ===")
print(df.iat[1, 0])
print("=== loc ===")
print(df.loc[0, 2])
print("=== iloc ===")
print(df.iloc[1, 0])
print("=== append ===")
print(df.append([np.nan]))
print("=== index ===")
print(df.index)
print("=== copy ===")
print(df.copy())
print("=== isna ===")
print(df.append([np.nan]).isna())
print("=== add ===")
print(df.add(10))
print("=== sub ===")
print(df.sub(2))
print("=== div ===")
print(df.div(4))
print("=== mul ===")
print(df.mul(5))
print("=== min ===")
print(df.min())
print("=== max ===")
print(df.max())
print("== to_csv ===")
#print(df.to_csv("output.csv", sep=","))
print("== to_pickle ===")
#print(df.to_pickle("output.pkl"))
print("=== to_dict ===")
#print(df.to_dict())
print("=== to_json ===")
#print(df.to_json())
print("=== to_latex ===")
#print(df.to_latex())
print("=== to_records ===")
#print(df.to_records())
print("=== to_string ===")
#print(df.to_string())
print("=== to_clipboard ===")
#print(df.to_clipboard())
print("=== read_csv ===")
#df2 = pd.read_csv("iris.csv")
df2 = pd.read_csv("user/secret.csv")
print(df2)
print("=== merge ===")
df_ab = pd.DataFrame({'a': ['a_1', 'a_2', 'a_3'], 'b': ['b_1', 'b_2', 'b_3']})
df_ac = pd.DataFrame({'a': ['a_1', 'a_2', 'a_4'], 'c': ['c_1', 'c_2', 'c_4']})
print(pd.merge(df_ab, df_ac))


print("=== concat ===")
print(pd.concat([df, df2]))
print("=== date_range ===")
print(pd.date_range(start='1/1/2018', end='1/08/2018'))
print("=== melt ===")
print(pd.melt(df))
print("=== merge_ordered ===")
dfA = pd.DataFrame({
    "key": ["a", "c", "e", "a", "c", "e"],
    "lvalue": [1, 2, 3, 1, 2, 3],
    "group": ["a", "a", "a", "b", "b", "b"]
})
dfB = pd.DataFrame({"key": ["b", "c", "d"], "rvalue": [1, 2, 3]})
print(pd.merge_ordered(dfA, dfB))
print("=== merge_asof ===")
left = pd.DataFrame({"a": [1, 5, 10], "left_val": ["a", "b", "c"]})
right = pd.DataFrame({"a": [1, 2, 3, 6, 7], "right_val": [1, 2, 3, 6, 7]})
print(pd.merge_asof(left, right, on="a"))
print("=== get_dummies ===")
print(pd.get_dummies(df))
print("=== fuctorize ===")
print(pd.factorize(["b", "b", "a", "c", "b"]))
print("=== unique ===")
print(pd.unique(df[0]))
print("=== wide_to_long ===")
dfA = pd.DataFrame({
    'famid': [1, 1, 1, 2, 2, 2, 3, 3, 3],
    'birth': [1, 2, 3, 1, 2, 3, 1, 2, 3],
    'ht1': [2.8, 2.9, 2.2, 2, 1.8, 1.9, 2.2, 2.3, 2.1],
    'ht2': [3.4, 3.8, 2.9, 3.2, 2.8, 2.4, 3.3, 3.4, 2.9]
})
print(pd.wide_to_long(dfA, stubnames="ht", i=["famid", "birth"], j="age"))

print("=== isna ===")
print(pd.isna(df.append([np.nan])))
print("=== notna ===")
print(pd.notna(df.append([np.nan])))
print("=== to_datetime ===")
print(pd.to_datetime("2020/12/22"))
print("=== to_timedelta ===")
print(pd.to_timedelta('15.5us'))
print("=== bdate_range ===")
print(pd.bdate_range(start='1/1/2018', end='1/08/2018'))
print("=== period_range ===")
print(pd.period_range(start='2017-01-01', end='2018-01-01', freq='M'))
print("== timedelta_range ===")
print(pd.timedelta_range(start='1 day', end='2 days', freq='6H'))
print("=== interval_range ===")
print(pd.interval_range(start=0, end=5))
print("=== Series ===")
#new?
#s = pd.Series(np.arange(5), index=["a", "b", "c", "d", "e"])
#print(s)
print("=== cut ===")
#print(pd.cut(s, 2))
print("=== qcut ===")
#print(pd.qcut(s, 2))
print("=== to_numeric ===")
#print(pd.to_numeric(s))



