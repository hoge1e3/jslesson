import numpy as np
import numpy.random as random
import numpy.fft as fft

#何回かに分けて動作確認
#このまま実行すると終わらない
print("=== constant ===")
print(np.pi)
print(np.nan)
print(np.e)
print(np.euler_gamma)
print(np.newaxis)
print(np.inf)
print("=== identity ===")
print(np.identity(5))
print("=== sort ===")
ary = np.random.randint(1, 100, 10)
print(ary)
print(np.sort(ary))
print("=== repeat ===")
ary = np.arange(6).reshape(2, -1)
print(ary)
print(np.repeat(ary, 3, axis=-1))
print("=== title ===")
ary = np.arange(6).reshape(2, -1)
print(ary)
print(np.tile(ary, 3))
print("=== round ===")
ary = np.random.normal(1, 1, 5)
print(ary)
print(np.round(ary))
print("=== argmin ===")
ary = np.random.randint(1, 100, 10)
print(ary)
print(np.argmin(ary))
print("=== argsort ===")
ary = np.random.randint(1, 100, 10)
print(ary)
print(np.argsort(ary))
print("=== median ===")
ary = np.random.randint(1, 100, 10)
print(ary)
print(np.median(ary))
print("=== var ===")
ary = np.random.randint(1, 100, 10)
print(ary)
print(np.var(ary))
print("=== log1p ===")
ary = np.arange(10)
print(ary)
print(np.log1p(ary))
print("=== log2 ===")
ary = np.arange(1, 6)
print(ary)
print(np.log2(ary))

print("=== degrees ===")
ary = np.linspace(0, np.pi, 7)
print(ary)
print(np.degrees(ary))
print("=== radians ===")
ary = np.linspace(0, 180, 7)
print(ary)
print(np.radians(ary))
print("=== rad2deg ===")
ary = np.linspace(0, np.pi, 7)
print(ary)
print(np.rad2deg(ary))
print("=== deg2rad ===")
ary = np.linspace(0, 180, 7)
print(ary)
print(np.deg2rad(ary))
print("=== unique ===")
ary = np.random.randint(1, 5, 20)
print(ary)
print(np.unique(ary))
print("=== isnan ===")
ary = np.array([0, 1, np.nan, 4, 5])
print(ary)
print(np.isnan(ary))
print("=== ravel ===")
ary = np.random.randint(1, 5, 20).reshape(4, 5)
print(ary)
print(np.ravel(ary))
print("=== imag ===")
#文法エラー
#ary = np.array([1+1j, 1+2j, -3-1j])
#print(ary)
#print(np.imag(ary))
print("=== real ===")
#文法エラー
#ary = np.array([1+1j, 1+2j, -3-1j])
#print(ary)
#print(np.real(ary))
print("=== sum ===")
ary = np.arange(10)
print(ary)
print(np.sum(ary))
print("=== prod ===")
ary = np.arange(1, 7).reshape(2, -1)
print(ary)
print(np.prod(ary))
print("=== int8 ===")
ary = np.arange(5)
print(ary.dtype)
print(np.int8(ary).dtype)
print("=== int16 ===")
ary = np.arange(5)
print(ary.dtype)
print(np.int16(ary).dtype)
print("=== int32 ===")
ary = np.arange(5)
print(ary.dtype)
print(np.int32(ary).dtype)
print("=== int64 ===")
ary = np.arange(5)
print(ary.dtype)
print(np.int64(ary).dtype)
print("=== float16 ===")
ary = np.arange(5)
print(ary.dtype)
print(np.float16(ary).dtype)
print("=== float32 ===")
ary = np.arange(5)
print(ary.dtype)
print(np.float16(ary).dtype)
print("=== float64 ===")
ary = np.arange(5)
print(ary.dtype)
print(np.float16(ary).dtype)
print("=== float128 ===")
ary = np.arange(5)
print(ary.dtype)
print(np.float16(ary).dtype)

print("=== full ===")
ary = np.full(3, 123)
print(ary)
print("=== full_like ===")
ary = np.arange(5)
print(ary)
print(np.full_like(ary, 123))
print("=== ceil ===")
ary = np.arange(-2, 2, 0.5)
print(ary)
print(np.ceil(ary))
print("=== floor ===")
ary = np.arange(-2, 2, 0.5)
print(ary)
print(np.floor(ary))
print("=== cumsum ===")
ary = np.arange(6).reshape(2, -1)
print(ary)
print(np.cumsum(ary))
print("=== swapaxes ===")
ary = np.arange(8).reshape(2, 2, 2)
print(ary)
print(np.swapaxes(ary, 0, 2))
print("=== resize ===")
ary = np.arange(6)
print(ary)
print(np.resize(ary, (2, 3)))
print("=== squeeze ===")
ary = np.arange(6).reshape(2, 1, -1)
print(ary)
print(np.squeeze(ary))
print("=== isinf ===")
ary = np.array([0, 1, 2, np.inf, 4])
print(ary)
print(np.isinf(ary))
print("=== all ===")
ary = np.arange(5)
print(ary)
print(np.all(ary>2))
print("=== any ===")
ary = np.arange(5)
print(ary)
print(np.any(ary>2))
print("=== nonzero ===")
ary = np.random.randint(0, 2, 10)
print(ary)
print(np.nonzero(ary))
print("=== take ===")
ary = np.arange(123, 132).reshape(3, 3)
print(ary)
print(np.take(ary, [0, 3, 6, 8]))
print("=== tril ===")
ary = np.arange(16).reshape(4, 4)
print(ary)
print(np.tril(ary))
print("=== triu ===")
ary = np.arange(16).reshape(4, 4)
print(ary)
print(np.triu(ary))

print("=== column_stack ===")
ary1 = np.arange(3)
ary2 = np.arange(10, 13)
print(ary1)
print(ary2)
print(np.column_stack((ary1, ary2)))
print("=== row_stack ===")
ary1 = np.arange(3)
ary2 = np.arange(10, 13)
print(ary1)
print(ary2)
print(np.row_stack((ary1, ary2)))
print("=== r_ ===")
ary1 = np.arange(5)
ary2 = np.arange(10, 15)
print(ary1)
print(ary2)
print(np.r_[ary1, ary2])
print("=== hsplit ===")
ary = np.arange(16).reshape(4, 4)
print(ary)
print(np.hsplit(ary, 2))
print("=== vsplit ===")
ary = np.arange(16).reshape(4, 4)
print(ary)
print(np.vsplit(ary, 2))
print("=== array_split ===")
ary = np.arange(16).reshape(4, 4)
print(ary)
print(np.hsplit(ary, 4))
print("=== logspace ===")
ary = np.logspace(1, 10, 10, base=2)
print(ary)
print("=== diagonal ===")
ary = np.arange(16).reshape(4, 4)
print(ary)
print(np.diagonal(ary))
print("=== dsplit ===")
ary = np.arange(16).reshape(2, 2, 4)
print(ary)
print(np.dsplit(ary, 2))
print("=== dstack ===")
ary1 = np.arange(16).reshape(2, 2, 4)
ary2 = np.arange(160,  176).reshape(2, 2, 4)
print(ary1)
print(ary2)
print(np.dstack((ary1, ary2)))
print("=== ptp ===")
ary = np.random.randint(1, 100, 20)
print(ary)
print(np.ptp(ary))
print("=== choose ===")
ary = np.arange(16).reshape(4, 4)
print(ary)
print(np.choose([2, 3, 1, 0], ary))
print("=== put ===")
ary = np.arange(5)
print(ary)
np.put(ary, [0, 2], [123, -567])
print(ary)
print("=== putmask ===")
ary = np.arange(6).reshape(2, 3)
print(ary)
np.putmask(ary, ary>2, ary ** 2)
print(ary)
print("=== cross ===")
ary1 = np.arange(1, 13).reshape(4, 3)
ary2 = np.arange(10, 22).reshape(4, 3)
print(ary1)
print(ary2)
print(np.cross(ary1, ary2))
print("=== trace ===")
ary = np.arange(16).reshape(4, 4)
print(ary)
print(np.trace(ary))

print("=== conj ===")
#文法エラー
#ary = np.array([1+1j, 3-4j])
#print(ary)
#print(np.conj(ary))
print("=== ix_ ===")
ary = np.arange(16).reshape(4, 4)
print(ary)
print(ary[np.ix_([0, 2], [1, 3])])
print("=== genfromtxt ===")
ary = np.genfromtxt("user/secret.csv", delimiter=",")
print(ary)
print("=== geomspace ===")
ary = np.geomspace(1, 1000, num=4)
print(ary)
print("=== diag ===")
ary = np.arange(16).reshape(4, 4)
print(ary)
print(np.diag(ary))
print("=== diagflat ===")
ary = np.diagflat([[1, 2], [3, 4]])
print(ary)
print("=== fft.fft ===")
ary = np.fft.fft(np.sin(np.arange(20)))
print(ary)
print("=== fft.ifft ===")
ary = np.fft.fft(np.sin(np.arange(20)))
print(ary)
ary = np.fft.ifft(ary)
print(ary)
print("=== fft.rfft ===")
ary = np.fft.rfft(np.sin(np.arange(20)))
print(ary)
print("=== fft.irfft ===")
ary = np.fft.rfft(np.sin(np.arange(20)))
print(ary)
ary = np.fft.irfft(ary)
print(ary)
print("=== fft.fftfreq ===")
ary = np.fft.fftfreq(np.arange(20).T.shape[-1])
print(ary)
print("=== fft.rfftfreq ===")
ary = np.fft.rfftfreq(np.arange(20).T.shape[-1])
print(ary)
print("=== np.random.binomial ===")
ary = np.random.binomial(1000, 0.5, 5)
print(ary)
print("=== np.random.poisson ===")
ary = np.random.poisson(5, size=100)
print(ary)
print("=== np.random.beta ===")
ary = np.random.beta(1, 2, 10)
print(ary)